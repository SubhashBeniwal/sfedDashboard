{"ast":null,"code":"import _slicedToArray from \"/Users/subhashbeniwal/Downloads/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/subhashbeniwal/Downloads/material-dashboard-react-master/src/views/Dashboard/Dashboard.js\";\nimport React, { useEffect, useState } from \"react\"; // react plugin for creating charts\n\nimport ChartistGraph from \"react-chartist\"; // @material-ui/core\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Store from \"@material-ui/icons/Store\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\nimport Update from \"@material-ui/icons/Update\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport Accessibility from \"@material-ui/icons/Accessibility\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Tasks from \"components/Tasks/Tasks.js\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport Danger from \"components/Typography/Danger.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport { bugs, website, server } from \"variables/general.js\";\nimport { dailySalesChart, emailsSubscriptionChart, completedTasksChart } from \"variables/charts.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { surveyAgentInfo, surveyCropInfo, surveyFarmerInfo, surveySaleInfo } from \"../old/surveys/internSurvey/constants\";\nimport FirebaseDataService from \"../../services/firebase.service\";\nimport { auth } from \"../../services/firebase\";\nimport moment from 'moment';\nvar useStyles = makeStyles(styles);\nexport default function Dashboard(props) {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      surveyIntern = _useState2[0],\n      setSurveyIntern = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      surveyInternLength = _useState4[0],\n      setSurveyInternLength = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      surveyKisan = _useState6[0],\n      setSurveyKisan = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      surveyKisanLength = _useState8[0],\n      setSurveyKisanLength = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      surveyFarmbook = _useState10[0],\n      setSurveyFarmbook = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      surveyFarmbookLength = _useState12[0],\n      setSurveyFarmbookLength = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      surveyRetail = _useState14[0],\n      setSurveyRetail = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      surveyRetailLength = _useState16[0],\n      setSurveyRetailLength = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      surveyInput = _useState18[0],\n      setSurveyInput = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      surveyInputLength = _useState20[0],\n      setSurveyInputLength = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      surveyAnimal = _useState22[0],\n      setSurveyAnimal = _useState22[1];\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      surveyAnimalLength = _useState24[0],\n      setSurveyAnimalLength = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      surveyEquipment = _useState26[0],\n      setSurveyEquipment = _useState26[1];\n\n  var _useState27 = useState(''),\n      _useState28 = _slicedToArray(_useState27, 2),\n      surveyEquipmentLength = _useState28[0],\n      setSurveyEquipmentLength = _useState28[1];\n\n  var _useState29 = useState('scoutingSurvey'),\n      _useState30 = _slicedToArray(_useState29, 2),\n      clickedItem = _useState30[0],\n      setClickedItem = _useState30[1];\n\n  var allSurveys = [{\n    title: \"Agent Details\",\n    survey: surveyAgentInfo\n  }, {\n    title: \"Farmer Details\",\n    survey: surveyFarmerInfo\n  }, {\n    title: \"Crop Details\",\n    survey: surveyCropInfo\n  }, {\n    title: \"Sale Details\",\n    survey: surveySaleInfo\n  }];\n  useEffect(function () {\n    auth.onAuthStateChanged(function (user) {\n      if (user) {\n        // User is signed in.\n        console.log(user);\n      } else {\n        // No user is signed in.\n        console.log(\"logged out\");\n        props.history.push(\"/login\");\n      }\n    });\n    getInternSurvey();\n    getKisanSurvey();\n    getFarmbookSurvey();\n    getRetailSurvey();\n    getInputSurvey();\n    getAnimalSurvey();\n    getEquipmentSurvey();\n  }, []);\n\n  var getInternSurvey = function getInternSurvey(id) {\n    FirebaseDataService.getSurveys('intern').onSnapshot(onDataChangeIntern);\n  };\n\n  var getKisanSurvey = function getKisanSurvey(id) {\n    FirebaseDataService.getSurveys('kisan').onSnapshot(onDataChangeKisan);\n  };\n\n  var getFarmbookSurvey = function getFarmbookSurvey(id) {\n    FirebaseDataService.getSurveys('farmbook').onSnapshot(onDataChangeFarmbook);\n  };\n\n  var getRetailSurvey = function getRetailSurvey(id) {\n    FirebaseDataService.getSurveys('retail').onSnapshot(onDataChangeRetail);\n  };\n\n  var getInputSurvey = function getInputSurvey(id) {\n    FirebaseDataService.getSurveys('input').onSnapshot(onDataChangeInput);\n  };\n\n  var getAnimalSurvey = function getAnimalSurvey(id) {\n    FirebaseDataService.getSurveys('animal').onSnapshot(onDataChangeAnimal);\n  };\n\n  var getEquipmentSurvey = function getEquipmentSurvey(id) {\n    FirebaseDataService.getSurveys('equipment').onSnapshot(onDataChangeEquipment);\n  };\n\n  var onDataChangeIntern = function onDataChangeIntern(items) {\n    var surveys = [];\n    var survey = [];\n    items.forEach(function (item) {\n      // let id = item.id;\n      var data = item.data();\n      surveys.push(data);\n    }); // allSurveys.map((surv, index) => {\n    //     return (surv.survey.map((item, index) => {\n    //         return (survey.push(\n    //             {\n    //                 key: item.label,\n    //                 value: (surveys.map((item1, index) => {\n    //                     return item1[item.value];\n    //                 }))\n    //             }\n    //         ))\n    //     }))\n    // })\n\n    setSurveyInternLength(surveys.length);\n    console.log(surveys.length);\n    surveys.map(function (item, index) {\n      return survey.push(item);\n    });\n    setSurveyIntern(survey);\n  };\n\n  var onDataChangeKisan = function onDataChangeKisan(items) {\n    var surveys = [];\n    var survey = [];\n    items.forEach(function (item) {\n      // let id = item.id;\n      var data = item.data();\n      surveys.push(data);\n    });\n    setSurveyKisanLength(surveys.length);\n    surveys.map(function (item, index) {\n      return survey.push(item);\n    });\n    setSurveyKisan(survey);\n  };\n\n  var onDataChangeFarmbook = function onDataChangeFarmbook(items) {\n    var surveys = [];\n    var survey = [];\n    items.forEach(function (item) {\n      // let id = item.id;\n      var data = item.data();\n      surveys.push(data);\n    });\n    setSurveyFarmbookLength(surveys.length);\n    surveys.map(function (item, index) {\n      return survey.push(item);\n    });\n    setSurveyFarmbook(survey);\n  };\n\n  var onDataChangeRetail = function onDataChangeRetail(items) {\n    var surveys = [];\n    var survey = [];\n    items.forEach(function (item) {\n      // let id = item.id;\n      var data = item.data();\n      surveys.push(data);\n    });\n    setSurveyRetailLength(surveys.length);\n    surveys.map(function (item, index) {\n      return survey.push(item);\n    });\n    setSurveyRetail(survey);\n  };\n\n  var onDataChangeInput = function onDataChangeInput(items) {\n    var surveys = [];\n    var survey = [];\n    items.forEach(function (item) {\n      // let id = item.id;\n      var data = item.data();\n      surveys.push(data);\n    });\n    setSurveyInputLength(surveys.length);\n    surveys.map(function (item, index) {\n      return survey.push(item);\n    });\n    setSurveyInput(survey);\n  };\n\n  var onDataChangeAnimal = function onDataChangeAnimal(items) {\n    var surveys = [];\n    var survey = [];\n    items.forEach(function (item) {\n      // let id = item.id;\n      var data = item.data();\n      surveys.push(data);\n    });\n    setSurveyAnimalLength(surveys.length);\n    surveys.map(function (item, index) {\n      return survey.push(item);\n    });\n    setSurveyAnimal(survey);\n  };\n\n  var onDataChangeEquipment = function onDataChangeEquipment(items) {\n    var surveys = [];\n    var survey = [];\n    items.forEach(function (item) {\n      // let id = item.id;\n      var data = item.data();\n      surveys.push(data);\n    });\n    setSurveyEquipmentLength(surveys.length);\n    surveys.map(function (item, index) {\n      return survey.push(item);\n    });\n    setSurveyEquipment(survey);\n  };\n\n  var allJsonData = [{\n    id: \"surveyIntern\",\n    data: surveyIntern\n  }, {\n    id: \"surveyFarmbook\",\n    data: surveyFarmbook\n  }, {\n    id: \"surveyKisan\",\n    data: surveyKisan\n  }, {\n    id: \"surveyRetail\",\n    data: surveyRetail\n  } // surveyInput,\n  // surveyAnimal,\n  // surveyEquipment,\n  ];\n\n  var dataFile = function dataFile(item) {\n    return allJsonData.filter(function (jsonData) {\n      console.log(jsonData.id);\n      console.log(item.jsonData === jsonData.id && jsonData.data);\n      return item.jsonData === jsonData.id ? jsonData.data : null;\n    });\n  };\n\n  var dataCards = [{\n    title: \"Intern\",\n    value: surveyInternLength,\n    color: \"warning\",\n    icon: /*#__PURE__*/React.createElement(Store, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 12\n      }\n    })\n  }, {\n    title: \"Kisan\",\n    value: surveyKisanLength,\n    color: \"success\",\n    icon: /*#__PURE__*/React.createElement(Store, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 12\n      }\n    })\n  }, {\n    title: \"Farmbook\",\n    value: surveyFarmbookLength,\n    color: \"danger\",\n    icon: /*#__PURE__*/React.createElement(Store, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 12\n      }\n    })\n  }, {\n    title: \"Retail\",\n    value: surveyRetailLength,\n    color: \"info\",\n    icon: /*#__PURE__*/React.createElement(Store, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 12\n      }\n    })\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }\n  }, dataCards.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 6,\n      md: 3,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      color: item.color,\n      stats: true,\n      icon: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardIcon, {\n      color: item.color,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }, item.icon), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      className: classes.cardTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }\n    }, item.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.cardCategory,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }\n    }, \"Total Surveys\"), /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.cardTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }\n    }, item.value)), /*#__PURE__*/React.createElement(CardFooter, {\n      stats: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.stats,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 18\n      }\n    }, \"Till \" + moment().format('DD/mm/yyyy'))))));\n  })), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    chart: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChartistGraph, {\n    className: \"ct-chart\",\n    data: dailySalesChart.data,\n    type: \"Line\",\n    options: dailySalesChart.options,\n    listener: dailySalesChart.animation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 15\n    }\n  }, \"Daily Sales\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.successText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ArrowUpward, {\n    className: classes.upArrowCardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 19\n    }\n  }), \" 55%\"), \" \", \"increase in today sales.\")), /*#__PURE__*/React.createElement(CardFooter, {\n    chart: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AccessTime, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 17\n    }\n  }), \" updated 4 minutes ago\")))), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    chart: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChartistGraph, {\n    className: \"ct-chart\",\n    data: emailsSubscriptionChart.data,\n    type: \"Bar\",\n    options: emailsSubscriptionChart.options,\n    responsiveOptions: emailsSubscriptionChart.responsiveOptions,\n    listener: emailsSubscriptionChart.animation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 15\n    }\n  }, \"Email Subscriptions\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 15\n    }\n  }, \"Last Campaign Performance\")), /*#__PURE__*/React.createElement(CardFooter, {\n    chart: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AccessTime, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 17\n    }\n  }), \" campaign sent 2 days ago\")))), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    chart: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChartistGraph, {\n    className: \"ct-chart\",\n    data: completedTasksChart.data,\n    type: \"Line\",\n    options: completedTasksChart.options,\n    listener: completedTasksChart.animation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 15\n    }\n  }, \"Completed Tasks\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 15\n    }\n  }, \"Last Campaign Performance\")), /*#__PURE__*/React.createElement(CardFooter, {\n    chart: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AccessTime, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 17\n    }\n  }), \" campaign sent 2 days ago\"))))), /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomTabs, {\n    title: \"Tasks:\",\n    headerColor: \"primary\",\n    tabs: [{\n      tabName: \"Bugs\",\n      tabIcon: BugReport,\n      tabContent: /*#__PURE__*/React.createElement(Tasks, {\n        checkedIndexes: [0, 3],\n        tasksIndexes: [0, 1, 2, 3],\n        tasks: bugs,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 19\n        }\n      })\n    }, {\n      tabName: \"Website\",\n      tabIcon: Code,\n      tabContent: /*#__PURE__*/React.createElement(Tasks, {\n        checkedIndexes: [0],\n        tasksIndexes: [0, 1],\n        tasks: website,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 19\n        }\n      })\n    }, {\n      tabName: \"Server\",\n      tabIcon: Cloud,\n      tabContent: /*#__PURE__*/React.createElement(Tasks, {\n        checkedIndexes: [1],\n        tasksIndexes: [0, 1, 2],\n        tasks: server,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 19\n        }\n      })\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 15\n    }\n  }, \"Employees Stats\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategoryWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 15\n    }\n  }, \"New employees on 15th September, 2016\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    tableHeaderColor: \"warning\",\n    tableHead: [\"ID\", \"Name\", \"Salary\", \"Country\"],\n    tableData: [[\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\"], [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\"], [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\"], [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\"]],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/subhashbeniwal/Downloads/material-dashboard-react-master/src/views/Dashboard/Dashboard.js"],"names":["React","useEffect","useState","ChartistGraph","makeStyles","Icon","Store","Warning","DateRange","LocalOffer","Update","ArrowUpward","AccessTime","Accessibility","BugReport","Code","Cloud","GridItem","GridContainer","Table","Tasks","CustomTabs","Danger","Card","CardHeader","CardIcon","CardBody","CardFooter","bugs","website","server","dailySalesChart","emailsSubscriptionChart","completedTasksChart","styles","surveyAgentInfo","surveyCropInfo","surveyFarmerInfo","surveySaleInfo","FirebaseDataService","auth","moment","useStyles","Dashboard","props","classes","surveyIntern","setSurveyIntern","surveyInternLength","setSurveyInternLength","surveyKisan","setSurveyKisan","surveyKisanLength","setSurveyKisanLength","surveyFarmbook","setSurveyFarmbook","surveyFarmbookLength","setSurveyFarmbookLength","surveyRetail","setSurveyRetail","surveyRetailLength","setSurveyRetailLength","surveyInput","setSurveyInput","surveyInputLength","setSurveyInputLength","surveyAnimal","setSurveyAnimal","surveyAnimalLength","setSurveyAnimalLength","surveyEquipment","setSurveyEquipment","surveyEquipmentLength","setSurveyEquipmentLength","clickedItem","setClickedItem","allSurveys","title","survey","onAuthStateChanged","user","console","log","history","push","getInternSurvey","getKisanSurvey","getFarmbookSurvey","getRetailSurvey","getInputSurvey","getAnimalSurvey","getEquipmentSurvey","id","getSurveys","onSnapshot","onDataChangeIntern","onDataChangeKisan","onDataChangeFarmbook","onDataChangeRetail","onDataChangeInput","onDataChangeAnimal","onDataChangeEquipment","items","surveys","forEach","item","data","length","map","index","allJsonData","dataFile","filter","jsonData","dataCards","value","color","icon","cardTitle","cardCategory","stats","format","options","animation","successText","upArrowCardCategory","responsiveOptions","tabName","tabIcon","tabContent","cardTitleWhite","cardCategoryWhite"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\n// react plugin for creating charts\nimport ChartistGraph from \"react-chartist\";\n// @material-ui/core\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Store from \"@material-ui/icons/Store\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\nimport Update from \"@material-ui/icons/Update\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport Accessibility from \"@material-ui/icons/Accessibility\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Tasks from \"components/Tasks/Tasks.js\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport Danger from \"components/Typography/Danger.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\n\nimport { bugs, website, server } from \"variables/general.js\";\n\nimport {\n  dailySalesChart,\n  emailsSubscriptionChart,\n  completedTasksChart\n} from \"variables/charts.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport {surveyAgentInfo, surveyCropInfo, surveyFarmerInfo, surveySaleInfo} from \"../old/surveys/internSurvey/constants\";\nimport FirebaseDataService from \"../../services/firebase.service\";\nimport {auth} from \"../../services/firebase\";\nimport moment from 'moment';\n\n\nconst useStyles = makeStyles(styles);\n\nexport default function Dashboard(props) {\n  const classes = useStyles();\n  const [surveyIntern, setSurveyIntern] = useState([]);\n  const [surveyInternLength, setSurveyInternLength] = useState('');\n  const [surveyKisan, setSurveyKisan] = useState([]);\n  const [surveyKisanLength, setSurveyKisanLength] = useState('');\n  const [surveyFarmbook, setSurveyFarmbook] = useState([]);\n  const [surveyFarmbookLength, setSurveyFarmbookLength] = useState('');\n  const [surveyRetail, setSurveyRetail] = useState([]);\n  const [surveyRetailLength, setSurveyRetailLength] = useState('');\n  const [surveyInput, setSurveyInput] = useState([]);\n  const [surveyInputLength, setSurveyInputLength] = useState('');\n  const [surveyAnimal, setSurveyAnimal] = useState([]);\n  const [surveyAnimalLength, setSurveyAnimalLength] = useState('');\n  const [surveyEquipment, setSurveyEquipment] = useState([]);\n  const [surveyEquipmentLength, setSurveyEquipmentLength] = useState('');\n\n  const [clickedItem, setClickedItem] = useState('scoutingSurvey');\n\n  const allSurveys = [\n    {title: \"Agent Details\", survey: surveyAgentInfo,},\n    {title: \"Farmer Details\", survey: surveyFarmerInfo,},\n    {title: \"Crop Details\", survey: surveyCropInfo,},\n    {title: \"Sale Details\", survey: surveySaleInfo,},\n  ];\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        // User is signed in.\n        console.log(user);\n      } else {\n        // No user is signed in.\n        console.log(\"logged out\");\n        props.history.push(\"/login\")\n      }\n    });\n    getInternSurvey()\n    getKisanSurvey()\n    getFarmbookSurvey()\n    getRetailSurvey()\n    getInputSurvey()\n    getAnimalSurvey()\n    getEquipmentSurvey()\n  }, []);\n\n  const getInternSurvey = (id) => {\n    FirebaseDataService.getSurveys('intern').onSnapshot(onDataChangeIntern);\n  }\n  const getKisanSurvey = (id) => {\n    FirebaseDataService.getSurveys('kisan').onSnapshot(onDataChangeKisan);\n  }\n  const getFarmbookSurvey = (id) => {\n    FirebaseDataService.getSurveys('farmbook').onSnapshot(onDataChangeFarmbook);\n  }\n  const getRetailSurvey = (id) => {\n    FirebaseDataService.getSurveys('retail').onSnapshot(onDataChangeRetail);\n  }\n  const getInputSurvey = (id) => {\n    FirebaseDataService.getSurveys('input').onSnapshot(onDataChangeInput);\n  }\n  const getAnimalSurvey = (id) => {\n    FirebaseDataService.getSurveys('animal').onSnapshot(onDataChangeAnimal);\n  }\n  const getEquipmentSurvey = (id) => {\n    FirebaseDataService.getSurveys('equipment').onSnapshot(onDataChangeEquipment);\n  }\n\n  const onDataChangeIntern = (items) => {\n    let surveys = [];\n    let survey = [];\n\n    items.forEach((item) => {\n      // let id = item.id;\n      let data = item.data();\n      surveys.push(data);\n    });\n\n    // allSurveys.map((surv, index) => {\n    //     return (surv.survey.map((item, index) => {\n    //         return (survey.push(\n    //             {\n    //                 key: item.label,\n    //                 value: (surveys.map((item1, index) => {\n    //                     return item1[item.value];\n    //                 }))\n    //             }\n    //         ))\n    //     }))\n    // })\n    setSurveyInternLength(surveys.length)\n    console.log(surveys.length)\n    surveys.map((item, index) => {\n      return survey.push(item);\n    })\n    setSurveyIntern(survey)\n  }\n\n  const onDataChangeKisan = (items) => {\n    let surveys = [];\n    let survey = [];\n\n    items.forEach((item) => {\n      // let id = item.id;\n      let data = item.data();\n      surveys.push(data);\n    });\n    setSurveyKisanLength(surveys.length)\n    surveys.map((item, index) => {\n      return survey.push(item);\n    })\n    setSurveyKisan(survey)\n  }\n  const onDataChangeFarmbook = (items) => {\n    let surveys = [];\n    let survey = [];\n\n    items.forEach((item) => {\n      // let id = item.id;\n      let data = item.data();\n      surveys.push(data);\n    });\n    setSurveyFarmbookLength(surveys.length)\n    surveys.map((item, index) => {\n      return survey.push(item);\n    })\n    setSurveyFarmbook(survey)\n  }\n  const onDataChangeRetail = (items) => {\n    let surveys = [];\n    let survey = [];\n\n    items.forEach((item) => {\n      // let id = item.id;\n      let data = item.data();\n      surveys.push(data);\n    });\n    setSurveyRetailLength(surveys.length)\n    surveys.map((item, index) => {\n      return survey.push(item);\n    })\n    setSurveyRetail(survey)\n  }\n\n  const onDataChangeInput = (items) => {\n    let surveys = [];\n    let survey = [];\n\n    items.forEach((item) => {\n      // let id = item.id;\n      let data = item.data();\n      surveys.push(data);\n    });\n    setSurveyInputLength(surveys.length)\n    surveys.map((item, index) => {\n      return survey.push(item);\n    })\n    setSurveyInput(survey)\n  }\n  const onDataChangeAnimal = (items) => {\n    let surveys = [];\n    let survey = [];\n\n    items.forEach((item) => {\n      // let id = item.id;\n      let data = item.data();\n      surveys.push(data);\n    });\n    setSurveyAnimalLength(surveys.length)\n    surveys.map((item, index) => {\n      return survey.push(item);\n    })\n    setSurveyAnimal(survey)\n  }\n  const onDataChangeEquipment = (items) => {\n    let surveys = [];\n    let survey = [];\n\n    items.forEach((item) => {\n      // let id = item.id;\n      let data = item.data();\n      surveys.push(data);\n    });\n    setSurveyEquipmentLength(surveys.length)\n    surveys.map((item, index) => {\n      return survey.push(item);\n    })\n    setSurveyEquipment(survey)\n  }\n\n  const allJsonData = [\n    {\n      id: \"surveyIntern\",\n      data: surveyIntern,\n    },\n    {\n      id: \"surveyFarmbook\",\n      data: surveyFarmbook,\n    },\n    {\n      id: \"surveyKisan\",\n      data: surveyKisan,\n    },\n    {\n      id: \"surveyRetail\",\n      data: surveyRetail,\n    },\n    // surveyInput,\n    // surveyAnimal,\n    // surveyEquipment,\n\n  ]\n  const dataFile = (item) => {\n    return allJsonData.filter((jsonData) => {\n      console.log(jsonData.id)\n      console.log(item.jsonData === jsonData.id && jsonData.data)\n      return item.jsonData === jsonData.id ? jsonData.data : null\n    })\n  }\n\n  const dataCards=[\n    {\n      title: \"Intern\",\n      value:surveyInternLength,\n      color:\"warning\",\n      icon:<Store />,\n    },\n      {\n      title: \"Kisan\",\n      value:surveyKisanLength,\n      color:\"success\",\n      icon:<Store />,\n    },\n      {\n      title: \"Farmbook\",\n      value:surveyFarmbookLength,\n      color:\"danger\",\n      icon:<Store />,\n    },\n      {\n      title: \"Retail\",\n      value:surveyRetailLength,\n      color:\"info\",\n      icon:<Store />,\n    },\n\n  ]\n\n  return (\n    <div>\n      <GridContainer>\n        {dataCards.map((item,index)=> {\n          return <GridItem xs={12} sm={6} md={3} key={index}>\n            <Card>\n              <CardHeader color={item.color} stats icon>\n                <CardIcon color={item.color}>\n                  {item.icon}\n                </CardIcon>\n                <p></p>\n                <h6 className={classes.cardTitle}>{item.title}</h6>\n                <p className={classes.cardCategory}>Total Surveys</p>\n                <h3 className={classes.cardTitle}>\n                  {/*49/50 <small>GB</small>*/}\n                  {item.value}\n                </h3>\n              </CardHeader>\n              <CardFooter stats>\n                <div className={classes.stats}>\n                  {/*<Danger>*/}\n                  {/*  <Warning/>*/}\n                  {/*</Danger>*/}\n                 <p>{\"Till \"+ moment().format('DD/mm/yyyy')}</p>\n                </div>\n              </CardFooter>\n            </Card>\n          </GridItem>\n        })}\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"success\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={dailySalesChart.data}\n                type=\"Line\"\n                options={dailySalesChart.options}\n                listener={dailySalesChart.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Daily Sales</h4>\n              <p className={classes.cardCategory}>\n                <span className={classes.successText}>\n                  <ArrowUpward className={classes.upArrowCardCategory} /> 55%\n                </span>{\" \"}\n                increase in today sales.\n              </p>\n            </CardBody>\n            <CardFooter chart>\n              <div className={classes.stats}>\n                <AccessTime /> updated 4 minutes ago\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"warning\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={emailsSubscriptionChart.data}\n                type=\"Bar\"\n                options={emailsSubscriptionChart.options}\n                responsiveOptions={emailsSubscriptionChart.responsiveOptions}\n                listener={emailsSubscriptionChart.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Email Subscriptions</h4>\n              <p className={classes.cardCategory}>Last Campaign Performance</p>\n            </CardBody>\n            <CardFooter chart>\n              <div className={classes.stats}>\n                <AccessTime /> campaign sent 2 days ago\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"danger\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={completedTasksChart.data}\n                type=\"Line\"\n                options={completedTasksChart.options}\n                listener={completedTasksChart.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Completed Tasks</h4>\n              <p className={classes.cardCategory}>Last Campaign Performance</p>\n            </CardBody>\n            <CardFooter chart>\n              <div className={classes.stats}>\n                <AccessTime /> campaign sent 2 days ago\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={6}>\n          <CustomTabs\n            title=\"Tasks:\"\n            headerColor=\"primary\"\n            tabs={[\n              {\n                tabName: \"Bugs\",\n                tabIcon: BugReport,\n                tabContent: (\n                  <Tasks\n                    checkedIndexes={[0, 3]}\n                    tasksIndexes={[0, 1, 2, 3]}\n                    tasks={bugs}\n                  />\n                )\n              },\n              {\n                tabName: \"Website\",\n                tabIcon: Code,\n                tabContent: (\n                  <Tasks\n                    checkedIndexes={[0]}\n                    tasksIndexes={[0, 1]}\n                    tasks={website}\n                  />\n                )\n              },\n              {\n                tabName: \"Server\",\n                tabIcon: Cloud,\n                tabContent: (\n                  <Tasks\n                    checkedIndexes={[1]}\n                    tasksIndexes={[0, 1, 2]}\n                    tasks={server}\n                  />\n                )\n              }\n            ]}\n          />\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"warning\">\n              <h4 className={classes.cardTitleWhite}>Employees Stats</h4>\n              <p className={classes.cardCategoryWhite}>\n                New employees on 15th September, 2016\n              </p>\n            </CardHeader>\n            <CardBody>\n              <Table\n                tableHeaderColor=\"warning\"\n                tableHead={[\"ID\", \"Name\", \"Salary\", \"Country\"]}\n                tableData={[\n                  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\"],\n                  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\"],\n                  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\"],\n                  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\"]\n                ]}\n              />\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}