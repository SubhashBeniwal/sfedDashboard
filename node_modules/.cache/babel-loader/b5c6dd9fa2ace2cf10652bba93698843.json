{"ast":null,"code":"import _slicedToArray from \"/Users/subhashbeniwal/Repos/subhash/sfedDashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/subhashbeniwal/Repos/subhash/sfedDashboard/src/views/Dashboard/surveys/internSurvey/viewSurvey.js\";\nimport React, { useEffect, useState } from \"react\";\nimport FirebaseDataService from \"../../../../services/firebase.service\";\nimport { auth } from \"../../../../services/firebase\";\nimport { Box, Divider, Typography } from \"@material-ui/core\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { useStyles } from \"./viewSurveyStyles\";\nimport { surveyAgentInfo, surveyCropInfo, surveyFarmerInfo, surveySaleInfo } from \"./constants\";\n\nfunction ViewInternSurvey(props) {\n  var _this = this;\n\n  var classes = props.classes;\n  var main = classes.main,\n      container = classes.container,\n      dataBox = classes.dataBox,\n      labelBox = classes.labelBox,\n      inputBox = classes.inputBox,\n      divider = classes.divider,\n      containerTitle = classes.containerTitle;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      survey = _useState2[0],\n      setSurvey = _useState2[1];\n\n  var allSurveys = [{\n    title: \"Agent Details\",\n    survey: surveyAgentInfo\n  }, {\n    title: \"Farmer Details\",\n    survey: surveyFarmerInfo\n  }, {\n    title: \"Crop Details\",\n    survey: surveyCropInfo\n  }, {\n    title: \"Sale Details\",\n    survey: surveySaleInfo\n  }];\n  useEffect(function () {\n    checkIfLoggedIn();\n    getSurvey(props.match.params.id);\n  }, []);\n\n  var checkIfLoggedIn = function checkIfLoggedIn() {\n    auth.onAuthStateChanged(function (user) {\n      if (user) {// User is signed in.\n        // console.log(user);\n      } else {\n        // No user is signed in.\n        // console.log(\"logged out\");\n        props.history.push(\"/login\");\n      }\n    });\n  };\n\n  var deleteSurvey = function deleteSurvey(id) {\n    FirebaseDataService.deleteSurvey(id).then(function () {// console.log(\"Deleted survey successfully!\");\n    })[\"catch\"](function (e) {\n      console.log(e);\n    });\n  };\n\n  var getSurvey = function getSurvey(id) {\n    FirebaseDataService.getSurvey(id, 'intern').then(function (data) {\n      setSurvey(data.data());\n      console.log(survey);\n    })[\"catch\"](function (e) {\n      console.log(e);\n    });\n  };\n\n  var _getDateTime = function _getDateTime(time) {\n    return time ? new Date(time).toDateString() + \" - \" + new Date(time).toLocaleTimeString() : 'N/A';\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    className: main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, allSurveys.map(function (surv, index) {\n    var arrLength = allSurveys.length;\n    return /*#__PURE__*/React.createElement(Box, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      className: containerTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, surv.title)), /*#__PURE__*/React.createElement(Box, {\n      className: container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, surv.survey.map(function (item, index) {\n      return /*#__PURE__*/React.createElement(Box, {\n        key: index,\n        className: dataBox,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        className: labelBox,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body1\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 37\n        }\n      }, item.label)), /*#__PURE__*/React.createElement(Box, {\n        className: inputBox,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 33\n        }\n      }, survey ? item.dateType ? _getDateTime(survey[item.value]) : survey[item.value] : \"N/A\"));\n    })), index + 1 < arrLength && /*#__PURE__*/React.createElement(Divider, {\n      className: divider,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 47\n      }\n    }));\n  }));\n}\n\nexport default withStyles(useStyles, {\n  withTheme: true\n})(ViewInternSurvey);","map":{"version":3,"sources":["/Users/subhashbeniwal/Repos/subhash/sfedDashboard/src/views/Dashboard/surveys/internSurvey/viewSurvey.js"],"names":["React","useEffect","useState","FirebaseDataService","auth","Box","Divider","Typography","withStyles","useStyles","surveyAgentInfo","surveyCropInfo","surveyFarmerInfo","surveySaleInfo","ViewInternSurvey","props","classes","main","container","dataBox","labelBox","inputBox","divider","containerTitle","survey","setSurvey","allSurveys","title","checkIfLoggedIn","getSurvey","match","params","id","onAuthStateChanged","user","history","push","deleteSurvey","then","e","console","log","data","_getDateTime","time","Date","toDateString","toLocaleTimeString","map","surv","index","arrLength","length","item","label","dateType","value","withTheme"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport FirebaseDataService from \"../../../../services/firebase.service\";\nimport {auth} from \"../../../../services/firebase\";\nimport {Box, Divider, Typography} from \"@material-ui/core\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {useStyles} from \"./viewSurveyStyles\";\nimport {surveyAgentInfo, surveyCropInfo, surveyFarmerInfo, surveySaleInfo} from \"./constants\";\n\n\nfunction ViewInternSurvey(props) {\n    const {classes} = props;\n    const {main, container, dataBox, labelBox, inputBox, divider, containerTitle} = classes;\n    const [survey, setSurvey] = useState('');\n\n    const allSurveys = [\n        {title: \"Agent Details\", survey: surveyAgentInfo,},\n        {title: \"Farmer Details\", survey: surveyFarmerInfo,},\n        {title: \"Crop Details\", survey: surveyCropInfo,},\n        {title: \"Sale Details\", survey: surveySaleInfo,},\n    ];\n\n    useEffect(() => {\n        checkIfLoggedIn();\n        getSurvey(props.match.params.id)\n    }, [])\n\n    const checkIfLoggedIn = () => {\n        auth.onAuthStateChanged((user) => {\n            if (user) {\n                // User is signed in.\n                // console.log(user);\n            } else {\n                // No user is signed in.\n                // console.log(\"logged out\");\n                props.history.push(\"/login\")\n            }\n        });\n    }\n\n    const deleteSurvey = (id) => {\n        FirebaseDataService.deleteSurvey(id)\n            .then(() => {\n                // console.log(\"Deleted survey successfully!\");\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    const getSurvey = (id) => {\n        FirebaseDataService.getSurvey(id, 'intern')\n            .then((data) => {\n                setSurvey(data.data())\n                console.log(survey)\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    const _getDateTime = (time) => {\n        return time ? (new Date(time).toDateString() + \" - \" + new Date(time).toLocaleTimeString()) : 'N/A'\n    }\n\n\n    return (\n        <Box className={main}>\n            {allSurveys.map((surv, index) => {\n                const arrLength = allSurveys.length\n                return <Box key={index}>\n                    <Box className={containerTitle}>\n                        <Typography variant={\"h5\"}>\n                            {surv.title}\n                        </Typography>\n                    </Box>\n                    <Box className={container}>\n                        {surv.survey.map((item, index) => {\n                            return <Box key={index} className={dataBox}>\n                                <Box className={labelBox}>\n                                    <Typography variant={\"body1\"}>\n                                        {item.label}\n                                    </Typography>\n                                </Box>\n                                <Box className={inputBox}>\n                                    {survey ? (item.dateType ? _getDateTime(survey[item.value]) : survey[item.value]) : \"N/A\"}\n                                </Box>\n                            </Box>\n                        })}\n                    </Box>\n                    {index + 1 < arrLength && <Divider className={divider}/>}\n                </Box>\n            })}\n        </Box>\n    );\n}\n\nexport default withStyles(useStyles, {withTheme: true})(ViewInternSurvey);"]},"metadata":{},"sourceType":"module"}