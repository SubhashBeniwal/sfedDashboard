{"ast":null,"code":"import _slicedToArray from \"/Users/subhashbeniwal/Repos/subhash/sfedDashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/subhashbeniwal/Repos/subhash/sfedDashboard/src/views/Dashboard/surveys/retailSurvey/surveyList.js\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport FirebaseDataService from \"../../../../services/firebase.service\"; // import {Table, Button} from 'reactstrap';\n\nimport { auth } from \"../../../../services/firebase\";\nimport Table from \"components/Table/Table.js\";\nimport Button from \"@material-ui/core/Button\";\nimport GridItem from \"../../../../components/Grid/GridItem\";\nimport Card from \"../../../../components/Card/Card\";\nimport CardHeader from \"../../../../components/Card/CardHeader\";\nimport CardBody from \"../../../../components/Card/CardBody\";\nimport GridContainer from \"../../../../components/Grid/GridContainer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Redirect, Switch } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport { Search } from \"@material-ui/icons\";\nvar styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  },\n  headerTitleBox: {\n    display: \"flex !important\",\n    justifyContent: \"space-between\"\n  },\n  searchBox: {\n    display: \"flex !important\",\n    justifyContent: \"flex-end\"\n  },\n  inputBox: {\n    display: \"flex !important\",\n    justifyContent: \"space-between\",\n    backgroundColor: \"#fff\",\n    padding: \"5px\"\n  },\n  input: {\n    border: 0\n  },\n  searchIcon: {\n    cursor: \"pointer\"\n  }\n};\nvar useStyles = makeStyles(styles);\n\nfunction RetailSurvey(props) {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      surveyList = _useState2[0],\n      setSurveyList = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      all = _useState6[0],\n      setAll = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      submitted = _useState8[0],\n      setSubmitted = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      searchText = _useState10[0],\n      setSearchText = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      filteredArray = _useState12[0],\n      setFilteredArray = _useState12[1];\n\n  useEffect(function () {\n    auth.onAuthStateChanged(function (user) {\n      if (user) {// User is signed in.\n        // console.log(user);\n      } else {\n        // No user is signed in.\n        // console.log(\"logged out\");\n        props.history.push(\"/login\");\n      }\n    });\n  }, []);\n  var tableData1 = [];\n  useEffect(function () {\n    console.log(filteredArray);\n    FirebaseDataService.getSurveys('retail').onSnapshot(onDataChange);\n  }, []);\n\n  var onDataChange = function onDataChange(items) {\n    var surveys = [];\n    items.forEach(function (item) {\n      // let id = item.id;\n      var data = item.data();\n      surveys.push(data);\n    }); // console.log(surveys)\n\n    setSurveyList(surveys);\n  };\n\n  var onChangeTitle = function onChangeTitle(e) {\n    setTitle(e.target.value);\n  };\n\n  var onChangeDescription = function onChangeDescription(e) {\n    setAll(e.target.value);\n  };\n\n  var groupArrayOfObjects = function groupArrayOfObjects(list, key) {\n    return list.reduce(function (rv, x) {\n      (rv[x[key]] = rv[x[key]] || []).push(x);\n      return rv;\n    }, {});\n  };\n\n  var saveCommodities = function saveCommodities() {\n    var list = JSON.parse(all);\n    var states = groupArrayOfObjects(list, 'state');\n    var keys = Object.keys(states);\n    keys.forEach(function (key) {\n      pushState(key, {\n        all: JSON.stringify(states[key])\n      });\n    });\n  };\n\n  var pushState = function pushState(state, data) {\n    FirebaseDataService.setCommodity(state, data).then(function () {\n      // console.log(\"Updated commodities successfully!\");\n      setSubmitted(true);\n    })[\"catch\"](function (e) {\n      console.log(e);\n    });\n  };\n\n  var deleteSurvey = function deleteSurvey(id) {\n    FirebaseDataService.deleteSurvey(id, 'retail').then(function () {// console.log(\"Deleted survey successfully!\");\n    })[\"catch\"](function (e) {\n      console.log(e);\n    });\n  };\n\n  var openSurvey = function openSurvey(e, id) {\n    // return <Redirect from=\"/admin\" to={\"/admin/internSurvey/\" + id} />\n    // e.preventDefault()\n    props.history.push(\"retailSurvey\" + id);\n  };\n\n  var _getDateTime = function _getDateTime(time) {\n    return time ? new Date(time).toDateString() + \" - \" + new Date(time).toLocaleTimeString() : 'NA';\n  };\n\n  var tableData = [];\n\n  var getTableValues = function getTableValues() {\n    {\n      surveyList.map(function (item, index) {\n        var data = [];\n        tableData.push(data);\n        return data.push(item.id, item.basic_info.full_name, /*#__PURE__*/React.createElement(React.Fragment, null, item.basic_info.city, \",\", item.basic_info.sstate, \",\"), item.basic_info.phone, item.basic_info.land_coordinates, _getDateTime(item.basic_info.time), item.basic_info.agentName, item.basic_info.agentId, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n          onClick: function onClick(e) {\n            e.preventDefault();\n            deleteSurvey(item.id);\n          },\n          outline: true,\n          size: \"sm\",\n          color: \"danger\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }\n        }, \"Delete\"), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          onClick: function onClick(e) {\n            // e.preventDefault()\n            openSurvey(e, item.id);\n          },\n          outline: true,\n          size: \"sm\",\n          color: \"primary\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }\n        }, \"View\")));\n      });\n    } // console.log(tableData)\n    // console.log(filteredArray)\n\n    tableData = filteredArray !== [] ? tableData : filteredArray;\n    return tableData;\n  };\n\n  tableData1 = getTableValues();\n\n  var onValueChange = function onValueChange(e) {\n    setSearchText(e.target.value); // console.log(searchText)\n  };\n\n  useEffect(function () {\n    var arr = [];\n    var newArray = [];\n    tableData.map(function (item, index) {\n      return item.filter(function (item1, index1) {\n        return item1 === searchText && newArray.push(item);\n      });\n    });\n    arr.push(newArray);\n    setFilteredArray(newArray); // console.log(arr)\n    // console.log(newArray)\n  }, [searchText]);\n\n  var onSearch = function onSearch() {\n    tableData1 = getTableValues();\n    console.log(tableData1);\n    return tableData1;\n  };\n\n  return /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    classname: classes.headerTitleBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 6,\n    sm: 6,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 33\n    }\n  }, \"Intern Surveys\")), /*#__PURE__*/React.createElement(GridItem, {\n    xs: 6,\n    sm: 6,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.searchBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.inputBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: classes.input,\n    placeholder: \"Search\",\n    onChange: function onChange(e) {\n      onValueChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    className: classes.searchIcon,\n    color: \"secondary\",\n    onClick: function onClick(e) {\n      e.preventDefault();\n      onSearch();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 41\n    }\n  })))))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    tableHeaderColor: \"primary\",\n    tableHead: [\"#\", \"Customer's Name\", \"Address\", \"Mobile\", \"Land Cordinates\", \"Time/Date\", \"Agent name\", \"Agent ID\", \"Actions\"],\n    tableData: tableData1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  })))));\n}\n\nexport default RetailSurvey;","map":{"version":3,"sources":["/Users/subhashbeniwal/Repos/subhash/sfedDashboard/src/views/Dashboard/surveys/retailSurvey/surveyList.js"],"names":["React","Component","useEffect","useState","FirebaseDataService","auth","Table","Button","GridItem","Card","CardHeader","CardBody","GridContainer","makeStyles","Redirect","Switch","Box","Search","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","lineHeight","headerTitleBox","display","justifyContent","searchBox","inputBox","backgroundColor","padding","input","border","searchIcon","cursor","useStyles","RetailSurvey","props","classes","surveyList","setSurveyList","title","setTitle","all","setAll","submitted","setSubmitted","searchText","setSearchText","filteredArray","setFilteredArray","onAuthStateChanged","user","history","push","tableData1","console","log","getSurveys","onSnapshot","onDataChange","items","surveys","forEach","item","data","onChangeTitle","e","target","value","onChangeDescription","groupArrayOfObjects","list","key","reduce","rv","x","saveCommodities","JSON","parse","states","keys","Object","pushState","stringify","state","setCommodity","then","deleteSurvey","id","openSurvey","_getDateTime","time","Date","toDateString","toLocaleTimeString","tableData","getTableValues","map","index","basic_info","full_name","city","sstate","phone","land_coordinates","agentName","agentId","preventDefault","onValueChange","arr","newArray","filter","item1","index1","onSearch"],"mappings":"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","sourcesContent":["import React, {Component, useEffect, useState} from \"react\";\nimport FirebaseDataService from \"../../../../services/firebase.service\";\n// import {Table, Button} from 'reactstrap';\nimport {auth} from \"../../../../services/firebase\";\nimport Table from \"components/Table/Table.js\";\nimport Button from \"@material-ui/core/Button\";\nimport GridItem from \"../../../../components/Grid/GridItem\";\nimport Card from \"../../../../components/Card/Card\";\nimport CardHeader from \"../../../../components/Card/CardHeader\";\nimport CardBody from \"../../../../components/Card/CardBody\";\nimport GridContainer from \"../../../../components/Grid/GridContainer\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Redirect, Switch} from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport {Search} from \"@material-ui/icons\";\n\nconst styles = {\n    cardCategoryWhite: {\n        \"&,& a,& a:hover,& a:focus\": {\n            color: \"rgba(255,255,255,.62)\",\n            margin: \"0\",\n            fontSize: \"14px\",\n            marginTop: \"0\",\n            marginBottom: \"0\"\n        },\n        \"& a,& a:hover,& a:focus\": {\n            color: \"#FFFFFF\"\n        }\n    },\n    cardTitleWhite: {\n        color: \"#FFFFFF\",\n        marginTop: \"0px\",\n        minHeight: \"auto\",\n        fontWeight: \"300\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: \"3px\",\n        textDecoration: \"none\",\n        \"& small\": {\n            color: \"#777\",\n            fontSize: \"65%\",\n            fontWeight: \"400\",\n            lineHeight: \"1\"\n        }\n    },\n    headerTitleBox: {\n        display: \"flex !important\",\n        justifyContent: \"space-between\"\n    },\n    searchBox: {\n        display: \"flex !important\",\n        justifyContent: \"flex-end\"\n    },\n    inputBox: {\n        display: \"flex !important\",\n        justifyContent: \"space-between\",\n        backgroundColor: \"#fff\",\n        padding: \"5px\"\n    },\n    input: {\n        border: 0\n    },\n    searchIcon:{\n        cursor: \"pointer\"\n    }\n};\n\nconst useStyles = makeStyles(styles);\n\nfunction RetailSurvey(props) {\n    const classes = useStyles();\n    const [surveyList, setSurveyList] = useState([])\n    const [title, setTitle] = useState('')\n    const [all, setAll] = useState('')\n    const [submitted, setSubmitted] = useState(false)\n    const [searchText, setSearchText] = useState('')\n    const [filteredArray, setFilteredArray] = useState([])\n    useEffect(() => {\n        auth.onAuthStateChanged((user) => {\n            if (user) {\n                // User is signed in.\n                // console.log(user);\n            } else {\n                // No user is signed in.\n                // console.log(\"logged out\");\n                props.history.push(\"/login\")\n            }\n        });\n    }, [])\n    let tableData1 = []\n    useEffect(() => {\n        console.log(filteredArray)\n        FirebaseDataService.getSurveys('retail').onSnapshot(onDataChange);\n    }, [])\n    const onDataChange = (items) => {\n        let surveys = [];\n\n        items.forEach((item) => {\n            // let id = item.id;\n            let data = item.data();\n            surveys.push(data);\n        });\n\n        // console.log(surveys)\n        setSurveyList(surveys)\n\n    }\n\n    const onChangeTitle = (e) => {\n        setTitle(e.target.value)\n    }\n\n    const onChangeDescription = (e) => {\n        setAll(e.target.value)\n    }\n\n    const groupArrayOfObjects = (list, key) => {\n        return list.reduce(function (rv, x) {\n            (rv[x[key]] = rv[x[key]] || []).push(x);\n            return rv;\n        }, {});\n    }\n\n    const saveCommodities = () => {\n        let list = JSON.parse(all);\n        let states = groupArrayOfObjects(list, 'state');\n        let keys = Object.keys(states);\n        keys.forEach(key => {\n            pushState(key, {all: JSON.stringify(states[key])});\n        });\n    }\n\n    const pushState = (state, data) => {\n        FirebaseDataService.setCommodity(state, data)\n            .then(() => {\n                // console.log(\"Updated commodities successfully!\");\n                setSubmitted(true)\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    const deleteSurvey = (id) => {\n        FirebaseDataService.deleteSurvey(id, 'retail')\n            .then(() => {\n                // console.log(\"Deleted survey successfully!\");\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    const openSurvey = (e, id) => {\n        // return <Redirect from=\"/admin\" to={\"/admin/internSurvey/\" + id} />\n        // e.preventDefault()\n        props.history.push(\"retailSurvey\" + id)\n    }\n\n    const _getDateTime = (time) => {\n        return time ? (new Date(time).toDateString() + \" - \" + new Date(time).toLocaleTimeString()) : 'NA'\n    }\n    let tableData = []\n\n    const getTableValues = () => {\n        {\n            surveyList.map((item, index) => {\n                let data = []\n                tableData.push(data)\n                return data.push(item.id,\n                    item.basic_info.full_name,\n                    <>{item.basic_info.city},\n                        {item.basic_info.sstate},\n                    </>,\n                    item.basic_info.phone,\n                    item.basic_info.land_coordinates,\n                    _getDateTime(item.basic_info.time),\n                    item.basic_info.agentName,\n                    item.basic_info.agentId,\n                    <>\n                        <Button onClick={(e) => {\n                            e.preventDefault()\n                            deleteSurvey(item.id)\n                        }} outline size=\"sm\" color=\"danger\">\n                            Delete</Button>\n                        <hr/>\n                        <Button onClick={(e) => {\n                            // e.preventDefault()\n                            openSurvey(e, item.id)\n                        }} outline size=\"sm\" color=\"primary\">\n                            View</Button>\n                    </>\n                )\n            })\n        }\n        // console.log(tableData)\n        // console.log(filteredArray)\n        tableData = filteredArray !== [] ? tableData : filteredArray\n        return tableData\n    }\n    tableData1 = getTableValues()\n\n    const onValueChange = (e) =>{\n        setSearchText(e.target.value)\n        // console.log(searchText)\n    }\n    useEffect(()=>{\n        let arr = [];\n        let newArray = [];\n        tableData.map((item,index)=>{\n            return item.filter((item1,index1)=>{\n                return item1 === searchText && newArray.push(item)\n            })\n        })\n        arr.push(newArray)\n        setFilteredArray(newArray)\n        // console.log(arr)\n        // console.log(newArray)\n    },[searchText])\n\n    const onSearch = () => {\n        tableData1 = getTableValues()\n        console.log(tableData1)\n        return tableData1\n    }\n\n\n    return (\n        <GridContainer>\n            <GridItem xs={12} sm={12} md={12}>\n                <Card>\n                    <CardHeader color=\"primary\" classname={classes.headerTitleBox}>\n                        <GridContainer>\n                            <GridItem xs={6} sm={6} md={6}>\n                                <h4 className={classes.cardTitleWhite}>Intern Surveys</h4>\n                            </GridItem>\n                            <GridItem xs={6} sm={6} md={6}>\n                                <Box className={classes.searchBox}>\n                                    <Box className={classes.inputBox}>\n                                        <input\n                                            className={classes.input}\n                                            placeholder={\"Search\"}\n                                            onChange={(e)=>{\n                                                onValueChange(e)\n                                            }}\n                                        />\n                                        <Search\n                                            className={classes.searchIcon}\n                                            color={\"secondary\"}\n                                            onClick={(e) => {\n                                                e.preventDefault();\n                                                onSearch()\n                                            }}/>\n                                    </Box>\n                                </Box>\n                            </GridItem>\n                        </GridContainer>\n                        {/*<p className={classes.cardCategoryWhite}>*/}\n                        {/*    Here is a subtitle for this table*/}\n                        {/*</p>*/}\n                    </CardHeader>\n                    <CardBody>\n                        <Table\n                            tableHeaderColor=\"primary\"\n                            tableHead={\n                                [\n                                    \"#\",\n                                    \"Customer's Name\",\n                                    \"Address\",\n                                    \"Mobile\",\n                                    \"Land Cordinates\",\n                                    \"Time/Date\",\n                                    \"Agent name\",\n                                    \"Agent ID\",\n                                    \"Actions\"\n                                ]\n                            }\n                            tableData={tableData1}\n                        />\n                    </CardBody>\n                </Card>\n            </GridItem>\n        </GridContainer>\n\n    )\n        ;\n\n\n}\n\nexport default RetailSurvey;\n"]},"metadata":{},"sourceType":"module"}