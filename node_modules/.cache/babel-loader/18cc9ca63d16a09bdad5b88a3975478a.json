{"ast":null,"code":"import _slicedToArray from \"/Users/subhashbeniwal/Downloads/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/subhashbeniwal/Downloads/material-dashboard-react-master/src/views/Dashboard/surveys/internSurvey/surveyList.js\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport FirebaseDataService from \"../../../../services/firebase.service\"; // import {Table, Button} from 'reactstrap';\n\nimport { auth } from \"../../../../services/firebase\";\nimport Table from \"components/Table/Table.js\";\nimport Button from \"@material-ui/core/Button\";\nimport GridItem from \"../../../../components/Grid/GridItem\";\nimport Card from \"../../../../components/Card/Card\";\nimport CardHeader from \"../../../../components/Card/CardHeader\";\nimport CardBody from \"../../../../components/Card/CardBody\";\nimport GridContainer from \"../../../../components/Grid/GridContainer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Redirect, Switch } from \"react-router-dom\";\nvar styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n};\nvar useStyles = makeStyles(styles);\n\nfunction InternSurvey(props) {\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      surveyList = _useState2[0],\n      setSurveyList = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      all = _useState6[0],\n      setAll = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      submitted = _useState8[0],\n      setSubmitted = _useState8[1];\n\n  useEffect(function () {\n    auth.onAuthStateChanged(function (user) {\n      if (user) {// User is signed in.\n        // console.log(user);\n      } else {\n        // No user is signed in.\n        // console.log(\"logged out\");\n        props.history.push(\"/login\");\n      }\n    });\n    FirebaseDataService.getSurveys('intern').onSnapshot(onDataChange); // unsubscribe();\n  }, []);\n\n  var onDataChange = function onDataChange(items) {\n    var surveys = [];\n    items.forEach(function (item) {\n      // let id = item.id;\n      var data = item.data();\n      surveys.push(data);\n    });\n    setSurveyList(surveys);\n  };\n\n  var onChangeTitle = function onChangeTitle(e) {\n    setTitle(e.target.value);\n  };\n\n  var onChangeDescription = function onChangeDescription(e) {\n    setAll(e.target.value);\n  };\n\n  var groupArrayOfObjects = function groupArrayOfObjects(list, key) {\n    return list.reduce(function (rv, x) {\n      (rv[x[key]] = rv[x[key]] || []).push(x);\n      return rv;\n    }, {});\n  };\n\n  var saveCommodities = function saveCommodities() {\n    var list = JSON.parse(all);\n    var states = groupArrayOfObjects(list, 'state');\n    var keys = Object.keys(states);\n    keys.forEach(function (key) {\n      pushState(key, {\n        all: JSON.stringify(states[key])\n      });\n    });\n  };\n\n  var pushState = function pushState(state, data) {\n    FirebaseDataService.setCommodity(state, data).then(function () {\n      // console.log(\"Updated commodities successfully!\");\n      setSubmitted(true);\n    })[\"catch\"](function (e) {\n      console.log(e);\n    });\n  };\n\n  var deleteSurvey = function deleteSurvey(id) {\n    FirebaseDataService.deleteSurvey(id, 'intern').then(function () {// console.log(\"Deleted survey successfully!\");\n    })[\"catch\"](function (e) {\n      console.log(e);\n    });\n  };\n\n  var openSurvey = function openSurvey(e, id) {\n    // return <Redirect from=\"/admin\" to={\"/admin/internSurvey/\" + id} />\n    // e.preventDefault()\n    props.history.push(\"internSurvey\" + id);\n  };\n\n  var _getDateTime = function _getDateTime(time) {\n    return time ? new Date(time).toDateString() + \" - \" + new Date(time).toLocaleTimeString() : 'NA';\n  };\n\n  var getTableValues = function getTableValues() {\n    var tableData = [];\n    tableData.push(surveyList.item.id, surveyList.item['farmer_first_name'], surveyList.item['farmer_sir_name'], surveyList.item[\"survey_state\"], surveyList.item[\"survey_district\"], surveyList.item[\"survey_tehsil\"], surveyList.item[\"survey_village\"], surveyList.item['farmer_mobile'], surveyList.item['total_cultivated_land'], surveyList.item['crops_sold_for_farm'], surveyList.item['sale_type'], surveyList._getDateTime(item['time']), surveyList.item['agentName'], surveyList.item['agentId'], surveyList.item['farmer_linked_to_fpo'], surveyList.item['have_storage_facility'], surveyList.item['storage_space_available']);\n    return tableData; //         <td className=\"text-right\"><Button onClick={(e) => {\n    //         e.preventDefault()\n    //         deleteSurvey(item.id)\n    //     }} outline size=\"sm\" color=\"danger\">\n    //         Delete</Button>\n    //     <hr/>\n    //     <Button onClick={(e) => {\n    //         // e.preventDefault()\n    //         openSurvey(e,item.id)\n    //     }} outline size=\"sm\" color=\"primary\">\n    //         View</Button>\n    // </td>\n    // </tr>;\n    // }))\n  };\n\n  return /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, \"Simple Table\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategoryWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }, \"Here is a subtitle for this table\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    tableHeaderColor: \"primary\",\n    tableHead: [\"#\", \"Farmer's Name\", \"Address\", \"Mobile\", \"Total Cultivated Land (in acres)\", \"Crops Sold for Farm Earning (in percent)\", \"Type of Sale\", \"Time/Date\", \"Agent name - (ID)\", \"Is the farmer linked to any FPO?\", \"Do you have a storage facility?\", \"Actions\"],\n    tableData: getTableValues(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  })))));\n}\n\nexport default InternSurvey;","map":{"version":3,"sources":["/Users/subhashbeniwal/Downloads/material-dashboard-react-master/src/views/Dashboard/surveys/internSurvey/surveyList.js"],"names":["React","Component","useEffect","useState","FirebaseDataService","auth","Table","Button","GridItem","Card","CardHeader","CardBody","GridContainer","makeStyles","Redirect","Switch","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","lineHeight","useStyles","InternSurvey","props","classes","surveyList","setSurveyList","title","setTitle","all","setAll","submitted","setSubmitted","onAuthStateChanged","user","history","push","getSurveys","onSnapshot","onDataChange","items","surveys","forEach","item","data","onChangeTitle","e","target","value","onChangeDescription","groupArrayOfObjects","list","key","reduce","rv","x","saveCommodities","JSON","parse","states","keys","Object","pushState","stringify","state","setCommodity","then","console","log","deleteSurvey","id","openSurvey","_getDateTime","time","Date","toDateString","toLocaleTimeString","getTableValues","tableData"],"mappings":"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","sourcesContent":["import React, {Component, useEffect, useState} from \"react\";\nimport FirebaseDataService from \"../../../../services/firebase.service\";\n// import {Table, Button} from 'reactstrap';\nimport {auth} from \"../../../../services/firebase\";\nimport Table from \"components/Table/Table.js\";\nimport Button from \"@material-ui/core/Button\";\nimport GridItem from \"../../../../components/Grid/GridItem\";\nimport Card from \"../../../../components/Card/Card\";\nimport CardHeader from \"../../../../components/Card/CardHeader\";\nimport CardBody from \"../../../../components/Card/CardBody\";\nimport GridContainer from \"../../../../components/Grid/GridContainer\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Redirect, Switch} from \"react-router-dom\";\n\nconst styles = {\n    cardCategoryWhite: {\n        \"&,& a,& a:hover,& a:focus\": {\n            color: \"rgba(255,255,255,.62)\",\n            margin: \"0\",\n            fontSize: \"14px\",\n            marginTop: \"0\",\n            marginBottom: \"0\"\n        },\n        \"& a,& a:hover,& a:focus\": {\n            color: \"#FFFFFF\"\n        }\n    },\n    cardTitleWhite: {\n        color: \"#FFFFFF\",\n        marginTop: \"0px\",\n        minHeight: \"auto\",\n        fontWeight: \"300\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: \"3px\",\n        textDecoration: \"none\",\n        \"& small\": {\n            color: \"#777\",\n            fontSize: \"65%\",\n            fontWeight: \"400\",\n            lineHeight: \"1\"\n        }\n    }\n};\n\nconst useStyles = makeStyles(styles);\n\nfunction InternSurvey(props) {\n    const classes = useStyles();\n    const [surveyList, setSurveyList] = useState([])\n    const [title, setTitle] = useState('')\n    const [all, setAll] = useState('')\n    const [submitted, setSubmitted] = useState(false)\n    useEffect(() => {\n        auth.onAuthStateChanged((user) => {\n            if (user) {\n                // User is signed in.\n                // console.log(user);\n            } else {\n                // No user is signed in.\n                // console.log(\"logged out\");\n                props.history.push(\"/login\")\n            }\n        });\n        FirebaseDataService.getSurveys('intern').onSnapshot(onDataChange);\n        // unsubscribe();\n    }, [])\n\n\n    const onDataChange = (items) => {\n        let surveys = [];\n\n        items.forEach((item) => {\n            // let id = item.id;\n            let data = item.data();\n            surveys.push(data);\n        });\n\n\n        setSurveyList(surveys)\n\n    }\n\n    const onChangeTitle = (e) => {\n        setTitle(e.target.value)\n    }\n\n    const onChangeDescription = (e) => {\n        setAll(e.target.value)\n    }\n\n    const groupArrayOfObjects = (list, key) => {\n        return list.reduce(function (rv, x) {\n            (rv[x[key]] = rv[x[key]] || []).push(x);\n            return rv;\n        }, {});\n    }\n\n    const saveCommodities = () => {\n        let list = JSON.parse(all);\n        let states = groupArrayOfObjects(list, 'state');\n        let keys = Object.keys(states);\n        keys.forEach(key => {\n            pushState(key, {all: JSON.stringify(states[key])});\n        });\n    }\n\n    const pushState = (state, data) => {\n        FirebaseDataService.setCommodity(state, data)\n            .then(() => {\n                // console.log(\"Updated commodities successfully!\");\n                setSubmitted(true)\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    const deleteSurvey = (id) => {\n        FirebaseDataService.deleteSurvey(id, 'intern')\n            .then(() => {\n                // console.log(\"Deleted survey successfully!\");\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    const openSurvey = (e, id) => {\n        // return <Redirect from=\"/admin\" to={\"/admin/internSurvey/\" + id} />\n        // e.preventDefault()\n        props.history.push(\"internSurvey\" + id)\n    }\n\n    const _getDateTime = (time) => {\n        return time ? (new Date(time).toDateString() + \" - \" + new Date(time).toLocaleTimeString()) : 'NA'\n    }\n\n    const getTableValues = () => {\n        let tableData = []\n\n        tableData.push(surveyList.item.id,\n            surveyList.item['farmer_first_name'],\n            surveyList.item['farmer_sir_name'],\n            surveyList.item[\"survey_state\"],\n            surveyList.item[\"survey_district\"],\n            surveyList.item[\"survey_tehsil\"],\n            surveyList.item[\"survey_village\"],\n            surveyList.item['farmer_mobile'],\n            surveyList.item['total_cultivated_land'],\n            surveyList.item['crops_sold_for_farm'],\n            surveyList.item['sale_type'],\n            surveyList._getDateTime(item['time']),\n            surveyList.item['agentName'],\n            surveyList.item['agentId'],\n            surveyList.item['farmer_linked_to_fpo'],\n            surveyList.item['have_storage_facility'],\n            surveyList.item['storage_space_available'])\n        return tableData\n    //         <td className=\"text-right\"><Button onClick={(e) => {\n    //         e.preventDefault()\n    //         deleteSurvey(item.id)\n    //     }} outline size=\"sm\" color=\"danger\">\n    //         Delete</Button>\n    //     <hr/>\n    //     <Button onClick={(e) => {\n    //         // e.preventDefault()\n    //         openSurvey(e,item.id)\n    //     }} outline size=\"sm\" color=\"primary\">\n    //         View</Button>\n    // </td>\n    // </tr>;\n    // }))\n    }\n\n\n    return (\n        <GridContainer>\n            <GridItem xs={12} sm={12} md={12}>\n                <Card>\n                    <CardHeader color=\"primary\">\n                        <h4 className={classes.cardTitleWhite}>Simple Table</h4>\n                        <p className={classes.cardCategoryWhite}>\n                            Here is a subtitle for this table\n                        </p>\n                    </CardHeader>\n                    <CardBody>\n                        {/*<Table className=\"align-items-center table-flush\" hover responsive>*/}\n                        {/*    <thead className=\"thead-light\">*/}\n                        {/*    <tr>*/}\n                        {/*        <th>#</th>*/}\n                        {/*        <th>Farmer's Name</th>*/}\n                        {/*        <th>Address</th>*/}\n                        {/*        <th>Mobile</th>*/}\n                        {/*        <th>Total Cultivated Land (in acres)</th>*/}\n                        {/*        <th>Crops Sold for Farm Earning (in percent)</th>*/}\n                        {/*        <th>Type of Sale</th>*/}\n                        {/*        <th>Time/Date</th>*/}\n                        {/*        <th>Agent name - (ID)</th>*/}\n                        {/*        <th>Is the farmer linked to any FPO?</th>*/}\n                        {/*        <th>Do you have a storage facility?</th>*/}\n                        {/*        <th>Actions</th>*/}\n                        {/*    </tr>*/}\n                        {/*    </thead>*/}\n                        {/*    <tbody>*/}\n                        {/*{surveyList.map((item, index) => {*/}\n                        {/*    return <tr key={item.id}>*/}\n                        {/*        <td>{index + 1}</td>*/}\n\n                        {/*        <th scope=\"row\">{item['farmer_first_name'] + \" \" + item['farmer_sir_name']}</th>*/}\n                        {/*        <td>*/}\n                        {/*            {item[\"survey_state\"]} <br/>*/}\n                        {/*            {item[\"survey_district\"]}*/}\n                        {/*            <br/>*/}\n                        {/*            {item[\"survey_tehsil\"]}*/}\n                        {/*            <br/>*/}\n                        {/*            {item[\"survey_village\"]}*/}\n\n                        {/*        </td>*/}\n                        {/*        <td>{item['farmer_mobile']}</td>*/}\n                        {/*        <td>{item['total_cultivated_land']}</td>*/}\n                        {/*        /!* <td>{item['major_crops_sown_in_kharif']}</td> *!/*/}\n                        {/*        <td>{item['crops_sold_for_farm']}</td>*/}\n                        {/*        /!* <td>{item['farmer_nearest_apmc']}</td> *!/*/}\n                        {/*        /!* <td>{item['farmer_apcm_distance']}</td> *!/*/}\n                        {/*        <td>{item['sale_type']}</td>*/}\n                        {/*        <td>{_getDateTime(item['time'])}</td>*/}\n                        {/*        <td>{item['agentName']}<br/>({item['agentId']})</td>*/}\n                        {/*        <td>{item['farmer_linked_to_fpo']}</td>*/}\n                        {/*        <td>{item['have_storage_facility']} {(item['have_storage_facility'] === 'Yes') && (<>*/}\n                        {/*            <br/> ({item['storage_space_available']})</>)}</td>*/}\n                        {/*        <td className=\"text-right\"><Button onClick={(e) => {*/}\n                        {/*            e.preventDefault()*/}\n                        {/*            deleteSurvey(item.id)*/}\n                        {/*        }} outline size=\"sm\" color=\"danger\">*/}\n                        {/*            Delete</Button>*/}\n                        {/*            <hr/>*/}\n                        {/*            <Button onClick={(e) => {*/}\n                        {/*                // e.preventDefault()*/}\n                        {/*                openSurvey(e, item.id)*/}\n                        {/*            }} outline size=\"sm\" color=\"primary\">*/}\n                        {/*                View</Button>*/}\n                        {/*        </td>*/}\n                        {/*    </tr>;*/}\n                        {/*})}*/}\n\n                        {/*    </tbody>*/}\n                        {/*</Table>*/}\n                        <Table\n                            tableHeaderColor=\"primary\"\n                            tableHead={\n                                [\n                                    \"#\",\n                                    \"Farmer's Name\",\n                                    \"Address\",\n                                    \"Mobile\",\n                                    \"Total Cultivated Land (in acres)\",\n                                    \"Crops Sold for Farm Earning (in percent)\",\n                                    \"Type of Sale\",\n                                    \"Time/Date\",\n                                    \"Agent name - (ID)\",\n                                    \"Is the farmer linked to any FPO?\",\n                                    \"Do you have a storage facility?\",\n                                    \"Actions\"\n                                ]\n                            }\n\n                            tableData={getTableValues()}\n                        />\n                    </CardBody>\n                </Card>\n            </GridItem>\n        </GridContainer>\n\n    )\n        ;\n\n\n}\n\nexport default InternSurvey;"]},"metadata":{},"sourceType":"module"}