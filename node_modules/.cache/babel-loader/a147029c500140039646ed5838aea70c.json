{"ast":null,"code":"import _slicedToArray from \"/Users/subhashbeniwal/Downloads/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/subhashbeniwal/Downloads/material-dashboard-react-master/src/views/Dashboard/surveys/farmBookSurvey/viewSurvey.js\";\nimport React, { useEffect, useState } from \"react\";\nimport FirebaseDataService from \"../../../../services/firebase.service\";\nimport { auth } from \"../../../../services/firebase\";\nimport { Box, Divider, Typography } from \"@material-ui/core\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { useStyles } from \"../internSurvey/viewSurveyStyles\";\nimport { surveyAgentInfo, surveyAlliedServicesInfo, surveyCropInfo, surveyFarmerInfo, surveyFarmerTechniqueInfo, surveyOtherInfo, surveySoilInfo } from \"./constants\";\n\nfunction ViewFarmBookSurvey(props) {\n  var _this = this;\n\n  var classes = props.classes;\n  var main = classes.main,\n      container = classes.container,\n      dataBox = classes.dataBox,\n      labelBox = classes.labelBox,\n      inputBox = classes.inputBox,\n      divider = classes.divider,\n      containerTitle = classes.containerTitle;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      survey = _useState2[0],\n      setSurvey = _useState2[1];\n\n  useEffect(function () {\n    checkIfLoggedIn();\n    getSurvey(props.match.params.id);\n  }, []);\n\n  var checkIfLoggedIn = function checkIfLoggedIn() {\n    auth.onAuthStateChanged(function (user) {\n      if (user) {// User is signed in.\n        // console.log(user);\n      } else {\n        // No user is signed in.\n        // console.log(\"logged out\");\n        props.history.push(\"/login\");\n      }\n    });\n  };\n\n  var deleteSurvey = function deleteSurvey(id) {\n    FirebaseDataService.deleteSurvey(id).then(function () {// console.log(\"Deleted survey successfully!\");\n    })[\"catch\"](function (e) {\n      console.log(e);\n    });\n  };\n\n  var getSurvey = function getSurvey(id) {\n    FirebaseDataService.getSurvey(id, 'farmbook').then(function (data) {\n      setSurvey(data.data());\n    })[\"catch\"](function (e) {\n      console.log(e);\n    });\n  };\n\n  var _getDateTime = function _getDateTime(time) {\n    return time ? new Date(time).toDateString() + \" - \" + new Date(time).toLocaleTimeString() : 'N/A';\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    className: main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: containerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Agent Details\")), /*#__PURE__*/React.createElement(Box, {\n    className: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, surveyAgentInfo.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Box, {\n      key: index,\n      className: dataBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      className: labelBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }, item.label)), /*#__PURE__*/React.createElement(Box, {\n      className: inputBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, survey ? item.dateType ? _getDateTime(survey[item.value]) : survey[item.value] : \"N/A\"));\n  })), /*#__PURE__*/React.createElement(Divider, {\n    className: divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    className: containerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Farmer Details\")), /*#__PURE__*/React.createElement(Box, {\n    className: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, surveyFarmerInfo.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Box, {\n      key: index,\n      className: dataBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      className: labelBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, item.label)), /*#__PURE__*/React.createElement(Box, {\n      className: inputBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, (survey === null || survey === void 0 ? void 0 : survey.farmer_info) && (survey === null || survey === void 0 ? void 0 : survey.farmer_info[item.value]) ? survey === null || survey === void 0 ? void 0 : survey.farmer_info[item.value] : 'N/A'));\n  })), /*#__PURE__*/React.createElement(Divider, {\n    className: divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    className: containerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, \"Crop Details\")), /*#__PURE__*/React.createElement(Box, {\n    className: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, (survey === null || survey === void 0 ? void 0 : survey.crop_info) && (survey === null || survey === void 0 ? void 0 : survey.crop_info.map(function (crop, index) {\n    return surveyCropInfo.map(function (item, index) {\n      return /*#__PURE__*/React.createElement(Box, {\n        key: index,\n        className: dataBox,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        className: labelBox,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body1\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 33\n        }\n      }, item.label)), /*#__PURE__*/React.createElement(Box, {\n        className: inputBox,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }\n      }, crop[item.value] ? crop[item.value] : \"N/A\"));\n    });\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    className: divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    className: containerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Soil Details\")), /*#__PURE__*/React.createElement(Box, {\n    className: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, surveySoilInfo.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Box, {\n      key: index,\n      className: dataBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      className: labelBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, item.label)), /*#__PURE__*/React.createElement(Box, {\n      className: inputBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, (survey === null || survey === void 0 ? void 0 : survey.soil_info) && (survey === null || survey === void 0 ? void 0 : survey.soil_info[item.value]) ? survey === null || survey === void 0 ? void 0 : survey.soil_info[item.value] : \"N/A\"));\n  })), /*#__PURE__*/React.createElement(Divider, {\n    className: divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    className: containerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, \"Farm Technique Details\")), /*#__PURE__*/React.createElement(Box, {\n    className: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, surveyFarmerTechniqueInfo.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Box, {\n      key: index,\n      className: dataBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      className: labelBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, item.label)), /*#__PURE__*/React.createElement(Box, {\n      className: inputBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }, (survey === null || survey === void 0 ? void 0 : survey.farm_technique_info) && (survey === null || survey === void 0 ? void 0 : survey.farm_technique_info[item.value]) ? survey === null || survey === void 0 ? void 0 : survey.farm_technique_info[item.value] : \"N/A\"));\n  })), /*#__PURE__*/React.createElement(Divider, {\n    className: divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    className: containerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, \"Allied Services Details\")), /*#__PURE__*/React.createElement(Box, {\n    className: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, surveyAlliedServicesInfo.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Box, {\n      key: index,\n      className: dataBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      className: labelBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 29\n      }\n    }, item.label)), /*#__PURE__*/React.createElement(Box, {\n      className: inputBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }, (survey === null || survey === void 0 ? void 0 : survey.allied_service_info) && (survey === null || survey === void 0 ? void 0 : survey.allied_service_info[item.value]) ? survey === null || survey === void 0 ? void 0 : survey.allied_service_info[item.value] : \"N/A\"));\n  })), /*#__PURE__*/React.createElement(Divider, {\n    className: divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    className: containerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, \"Other Details\")), /*#__PURE__*/React.createElement(Box, {\n    className: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, surveyOtherInfo.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Box, {\n      key: index,\n      className: dataBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      className: labelBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 29\n      }\n    }, item.label)), /*#__PURE__*/React.createElement(Box, {\n      className: inputBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }\n    }, (survey === null || survey === void 0 ? void 0 : survey.other_info) && (survey === null || survey === void 0 ? void 0 : survey.other_info[item.value]) ? survey === null || survey === void 0 ? void 0 : survey.other_info[item.value] : \"N/A\"));\n  })));\n}\n\nexport default withStyles(useStyles, {\n  withTheme: true\n})(ViewFarmBookSurvey);","map":{"version":3,"sources":["/Users/subhashbeniwal/Downloads/material-dashboard-react-master/src/views/Dashboard/surveys/farmBookSurvey/viewSurvey.js"],"names":["React","useEffect","useState","FirebaseDataService","auth","Box","Divider","Typography","withStyles","useStyles","surveyAgentInfo","surveyAlliedServicesInfo","surveyCropInfo","surveyFarmerInfo","surveyFarmerTechniqueInfo","surveyOtherInfo","surveySoilInfo","ViewFarmBookSurvey","props","classes","main","container","dataBox","labelBox","inputBox","divider","containerTitle","survey","setSurvey","checkIfLoggedIn","getSurvey","match","params","id","onAuthStateChanged","user","history","push","deleteSurvey","then","e","console","log","data","_getDateTime","time","Date","toDateString","toLocaleTimeString","map","item","index","label","dateType","value","farmer_info","crop_info","crop","soil_info","farm_technique_info","allied_service_info","other_info","withTheme"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport FirebaseDataService from \"../../../../services/firebase.service\";\nimport {auth} from \"../../../../services/firebase\";\nimport {Box, Divider, Typography} from \"@material-ui/core\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {useStyles} from \"../internSurvey/viewSurveyStyles\";\nimport {\n    surveyAgentInfo,\n    surveyAlliedServicesInfo,\n    surveyCropInfo,\n    surveyFarmerInfo,\n    surveyFarmerTechniqueInfo, surveyOtherInfo,\n    surveySoilInfo\n} from \"./constants\";\n\n\nfunction ViewFarmBookSurvey(props) {\n    const {classes} = props;\n    const {main, container, dataBox, labelBox, inputBox, divider, containerTitle} = classes;\n    const [survey, setSurvey] = useState('');\n\n    useEffect(() => {\n        checkIfLoggedIn();\n        getSurvey(props.match.params.id)\n    }, [])\n\n    const checkIfLoggedIn = () => {\n        auth.onAuthStateChanged((user) => {\n            if (user) {\n                // User is signed in.\n                // console.log(user);\n            } else {\n                // No user is signed in.\n                // console.log(\"logged out\");\n                props.history.push(\"/login\")\n            }\n        });\n    }\n\n    const deleteSurvey = (id) => {\n        FirebaseDataService.deleteSurvey(id)\n            .then(() => {\n                // console.log(\"Deleted survey successfully!\");\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    const getSurvey = (id) => {\n        FirebaseDataService.getSurvey(id, 'farmbook')\n            .then((data) => {\n                setSurvey(data.data())\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    const _getDateTime = (time) => {\n        return time ? (new Date(time).toDateString() + \" - \" + new Date(time).toLocaleTimeString()) : 'N/A'\n    }\n\n\n    return (\n        <Box className={main}>\n            <Box className={containerTitle}>\n                <Typography variant={\"h5\"}>\n                    Agent Details\n                </Typography>\n            </Box>\n            <Box className={container}>\n                {surveyAgentInfo.map((item, index) => {\n                    return <Box key={index} className={dataBox}>\n                        <Box className={labelBox}>\n                            <Typography variant={\"body1\"}>\n                                {item.label}\n                            </Typography>\n                        </Box>\n                        <Box className={inputBox}>\n                            {survey ? (item.dateType ? _getDateTime(survey[item.value]) : survey[item.value]) : \"N/A\"}\n                        </Box>\n                    </Box>\n                })}\n            </Box>\n            <Divider className={divider}/>\n\n            <Box className={containerTitle}>\n                <Typography variant={\"h5\"}>\n                    Farmer Details\n                </Typography>\n            </Box>\n            <Box className={container}>\n                {surveyFarmerInfo.map((item, index) => {\n                    return <Box key={index} className={dataBox}>\n                        <Box className={labelBox}>\n                            <Typography variant={\"body1\"}>\n                                {item.label}\n                            </Typography>\n                        </Box>\n                        <Box className={inputBox}>\n                            {survey?.farmer_info && survey?.farmer_info[item.value] ? survey?.farmer_info[item.value] : 'N/A'}\n                        </Box>\n                    </Box>\n                })}\n            </Box>\n            <Divider className={divider}/>\n\n            <Box className={containerTitle}>\n                <Typography variant={\"h5\"}>\n                    Crop Details\n                </Typography>\n            </Box>\n            <Box className={container}>\n                {survey?.crop_info && survey?.crop_info.map((crop, index) => {\n                    return surveyCropInfo.map((item, index) => {\n                        return <Box key={index} className={dataBox}>\n                            <Box className={labelBox}>\n                                <Typography variant={\"body1\"}>\n                                    {item.label}\n                                </Typography>\n                            </Box>\n                            <Box className={inputBox}>\n                                {crop[item.value] ? crop[item.value] : \"N/A\"}\n                            </Box>\n                        </Box>\n                    })\n                })}\n            </Box>\n            <Divider className={divider}/>\n\n            <Box className={containerTitle}>\n                <Typography variant={\"h5\"}>\n                    Soil Details\n                </Typography>\n            </Box>\n            <Box className={container}>\n                {surveySoilInfo.map((item, index) => {\n                    return <Box key={index} className={dataBox}>\n                        <Box className={labelBox}>\n                            <Typography variant={\"body1\"}>\n                                {item.label}\n                            </Typography>\n                        </Box>\n                        <Box className={inputBox}>\n                            {survey?.soil_info && survey?.soil_info[item.value] ? survey?.soil_info[item.value] : \"N/A\"}\n                        </Box>\n                    </Box>\n                })}\n            </Box>\n            <Divider className={divider}/>\n\n            <Box className={containerTitle}>\n                <Typography variant={\"h5\"}>\n                    Farm Technique Details\n                </Typography>\n            </Box>\n            <Box className={container}>\n                {surveyFarmerTechniqueInfo.map((item, index) => {\n                    return <Box key={index} className={dataBox}>\n                        <Box className={labelBox}>\n                            <Typography variant={\"body1\"}>\n                                {item.label}\n                            </Typography>\n                        </Box>\n                        <Box className={inputBox}>\n                            {survey?.farm_technique_info && survey?.farm_technique_info[item.value] ? survey?.farm_technique_info[item.value] : \"N/A\"}\n                        </Box>\n                    </Box>\n                })}\n            </Box>\n            <Divider className={divider}/>\n\n            <Box className={containerTitle}>\n                <Typography variant={\"h5\"}>\n                    Allied Services Details\n                </Typography>\n            </Box>\n            <Box className={container}>\n                {surveyAlliedServicesInfo.map((item, index) => {\n                    return <Box key={index} className={dataBox}>\n                        <Box className={labelBox}>\n                            <Typography variant={\"body1\"}>\n                                {item.label}\n                            </Typography>\n                        </Box>\n                        <Box className={inputBox}>\n                            {survey?.allied_service_info && survey?.allied_service_info[item.value] ? survey?.allied_service_info[item.value] : \"N/A\"}\n                        </Box>\n                    </Box>\n                })}\n            </Box>\n            <Divider className={divider}/>\n\n            <Box className={containerTitle}>\n                <Typography variant={\"h5\"}>\n                    Other Details\n                </Typography>\n            </Box>\n            <Box className={container}>\n                {surveyOtherInfo.map((item, index) => {\n                    return <Box key={index} className={dataBox}>\n                        <Box className={labelBox}>\n                            <Typography variant={\"body1\"}>\n                                {item.label}\n                            </Typography>\n                        </Box>\n                        <Box className={inputBox}>\n                            {survey?.other_info && survey?.other_info[item.value] ? survey?.other_info[item.value] : \"N/A\"}\n                        </Box>\n                    </Box>\n                })}\n            </Box>\n        </Box>\n    );\n}\n\nexport default withStyles(useStyles, {withTheme: true})(ViewFarmBookSurvey);"]},"metadata":{},"sourceType":"module"}