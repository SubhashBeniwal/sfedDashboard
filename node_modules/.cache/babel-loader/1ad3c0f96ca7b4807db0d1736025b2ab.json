{"ast":null,"code":"import _slicedToArray from \"/Users/subhashbeniwal/Downloads/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/subhashbeniwal/Downloads/material-dashboard-react-master/src/views/Dashboard/surveys/retailSurvey/viewSurvey.js\";\nimport React, { useEffect, useState } from \"react\";\nimport FirebaseDataService from \"../../../../services/firebase.service\";\nimport { auth } from \"../../../../services/firebase\";\nimport { Box, Divider, Typography } from \"@material-ui/core\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { useStyles } from \"../internSurvey/viewSurveyStyles\";\nimport { retailSurveyAgentInfo, retailSurveyCustomerData, retailSurveyDairyData, retailSurveyFruitsAndVegetablesData, retailSurveyGroceryData, retailSurveyHealthAndHygieneInfo, retailSurveyNonVegetarianData } from \"./constants\";\n\nfunction ViewRetailSurvey(props) {\n  var _this = this;\n\n  var classes = props.classes;\n  var main = classes.main,\n      container = classes.container,\n      dataBox = classes.dataBox,\n      labelBox = classes.labelBox,\n      inputBox = classes.inputBox,\n      containerTitle = classes.containerTitle,\n      divider = classes.divider;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      survey = _useState2[0],\n      setSurvey = _useState2[1];\n\n  useEffect(function () {\n    checkIfLoggedIn();\n    getSurvey(props.match.params.id);\n  }, []);\n\n  var checkIfLoggedIn = function checkIfLoggedIn() {\n    auth.onAuthStateChanged(function (user) {\n      if (user) {// User is signed in.\n        // console.log(user);\n      } else {\n        // No user is signed in.\n        // console.log(\"logged out\");\n        props.history.push(\"/login\");\n      }\n    });\n  };\n\n  var deleteSurvey = function deleteSurvey(id) {\n    FirebaseDataService.deleteSurvey(id).then(function () {// console.log(\"Deleted survey successfully!\");\n    })[\"catch\"](function (e) {\n      console.log(e);\n    });\n  };\n\n  var getSurvey = function getSurvey(id) {\n    FirebaseDataService.getSurvey(id, 'retail').then(function (data) {\n      setSurvey(data.data());\n    })[\"catch\"](function (e) {\n      console.log(e);\n    });\n  };\n\n  var _getDateTime = function _getDateTime(time) {\n    return time ? new Date(time).toDateString() + \" - \" + new Date(time).toLocaleTimeString() : 'N/A';\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    className: main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: containerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Agent Details\")), /*#__PURE__*/React.createElement(Box, {\n    className: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, retailSurveyAgentInfo.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Box, {\n      key: index,\n      className: dataBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      className: labelBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, item.label)), /*#__PURE__*/React.createElement(Box, {\n      className: inputBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, survey ? item.dateType ? _getDateTime(survey[item.value]) : survey[item.value] : \"N/A\"));\n  })), /*#__PURE__*/React.createElement(Divider, {\n    className: divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    className: containerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Customer Details\")), /*#__PURE__*/React.createElement(Box, {\n    className: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, retailSurveyCustomerData.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Box, {\n      key: index,\n      className: dataBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      className: labelBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, item.label)), /*#__PURE__*/React.createElement(Box, {\n      className: inputBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, (survey === null || survey === void 0 ? void 0 : survey.basic_info) && (survey === null || survey === void 0 ? void 0 : survey.basic_info[item.value]) ? survey === null || survey === void 0 ? void 0 : survey.basic_info[item.value] : \"N/A\"));\n  })), /*#__PURE__*/React.createElement(Divider, {\n    className: divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    className: containerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Dairy Details\")), /*#__PURE__*/React.createElement(Box, {\n    className: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, retailSurveyDairyData.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Box, {\n      key: index,\n      className: dataBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      className: labelBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    }, item.label)), /*#__PURE__*/React.createElement(Box, {\n      className: inputBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, (survey === null || survey === void 0 ? void 0 : survey.dairy_info) && (survey === null || survey === void 0 ? void 0 : survey.dairy_info[item.value]) ? survey === null || survey === void 0 ? void 0 : survey.dairy_info[item.value] : \"N/A\"));\n  })), /*#__PURE__*/React.createElement(Divider, {\n    className: divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    className: containerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, \"Fruits and vegetables Details\")), /*#__PURE__*/React.createElement(Box, {\n    className: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, retailSurveyFruitsAndVegetablesData.map(function (item, index) {\n    var _survey$fruits_veg_in, _survey$fruits_veg_in2, _survey$fruits_veg_in3, _survey$fruits_veg_in4, _survey$fruits_veg_in5, _survey$fruits_veg_in6;\n\n    return /*#__PURE__*/React.createElement(Box, {\n      key: index,\n      className: dataBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      className: labelBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    }, item.label)), item.value === \"purchase_source\" && (survey === null || survey === void 0 ? void 0 : (_survey$fruits_veg_in = survey.fruits_veg_info) === null || _survey$fruits_veg_in === void 0 ? void 0 : (_survey$fruits_veg_in2 = _survey$fruits_veg_in.purchase_source) === null || _survey$fruits_veg_in2 === void 0 ? void 0 : _survey$fruits_veg_in2.length) > 0 ? survey === null || survey === void 0 ? void 0 : (_survey$fruits_veg_in3 = survey.fruits_veg_info) === null || _survey$fruits_veg_in3 === void 0 ? void 0 : _survey$fruits_veg_in3.purchase_source.map(function (item1, index) {\n      return /*#__PURE__*/React.createElement(Box, {\n        className: inputBox,\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 40\n        }\n      }, item1 ? item1 : 'N/A');\n    }) : item.value === \"exotic_vegetables\" && (survey === null || survey === void 0 ? void 0 : (_survey$fruits_veg_in4 = survey.fruits_veg_info) === null || _survey$fruits_veg_in4 === void 0 ? void 0 : (_survey$fruits_veg_in5 = _survey$fruits_veg_in4.exotic_vegetables) === null || _survey$fruits_veg_in5 === void 0 ? void 0 : _survey$fruits_veg_in5.length) > 0 ? survey === null || survey === void 0 ? void 0 : (_survey$fruits_veg_in6 = survey.fruits_veg_info) === null || _survey$fruits_veg_in6 === void 0 ? void 0 : _survey$fruits_veg_in6.exotic_vegetables.map(function (item1, index) {\n      return /*#__PURE__*/React.createElement(Box, {\n        className: inputBox,\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 48\n        }\n      }, item1 ? item1 : 'N/A');\n    }) : /*#__PURE__*/React.createElement(Box, {\n      className: inputBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 39\n      }\n    }, (survey === null || survey === void 0 ? void 0 : survey.fruits_veg_info) && (survey === null || survey === void 0 ? void 0 : survey.fruits_veg_info[item.value]) ? survey === null || survey === void 0 ? void 0 : survey.fruits_veg_info[item.value] : \"N/A\"));\n  })), /*#__PURE__*/React.createElement(Divider, {\n    className: divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    className: containerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \"Grocery Details\")), /*#__PURE__*/React.createElement(Box, {\n    className: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, retailSurveyGroceryData.map(function (item, index) {\n    var _survey$grocery_info, _survey$grocery_info$, _survey$grocery_info2, _survey$grocery_info3, _survey$grocery_info4, _survey$grocery_info5;\n\n    return /*#__PURE__*/React.createElement(Box, {\n      key: index,\n      className: dataBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      className: labelBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 29\n      }\n    }, item.label)), item.value === \"grocery_purchase_source\" && (survey === null || survey === void 0 ? void 0 : (_survey$grocery_info = survey.grocery_info) === null || _survey$grocery_info === void 0 ? void 0 : (_survey$grocery_info$ = _survey$grocery_info.grocery_purchase_source) === null || _survey$grocery_info$ === void 0 ? void 0 : _survey$grocery_info$.length) > 0 ? survey === null || survey === void 0 ? void 0 : (_survey$grocery_info2 = survey.grocery_info) === null || _survey$grocery_info2 === void 0 ? void 0 : _survey$grocery_info2.grocery_purchase_source.map(function (item1, index) {\n      return /*#__PURE__*/React.createElement(Box, {\n        className: inputBox,\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 40\n        }\n      }, item1 ? item1 : 'N/A');\n    }) : item.value === \"sugar_products\" && (survey === null || survey === void 0 ? void 0 : (_survey$grocery_info3 = survey.grocery_info) === null || _survey$grocery_info3 === void 0 ? void 0 : (_survey$grocery_info4 = _survey$grocery_info3.sugar_products) === null || _survey$grocery_info4 === void 0 ? void 0 : _survey$grocery_info4.length) > 0 ? survey === null || survey === void 0 ? void 0 : (_survey$grocery_info5 = survey.grocery_info) === null || _survey$grocery_info5 === void 0 ? void 0 : _survey$grocery_info5.sugar_products.map(function (item1, index) {\n      return /*#__PURE__*/React.createElement(Box, {\n        className: inputBox,\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 48\n        }\n      }, item1 ? item1 : 'N/A');\n    }) : /*#__PURE__*/React.createElement(Box, {\n      className: inputBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 37\n      }\n    }, (survey === null || survey === void 0 ? void 0 : survey.grocery_info) && (survey === null || survey === void 0 ? void 0 : survey.grocery_info[item.value]) ? survey === null || survey === void 0 ? void 0 : survey.grocery_info[item.value] : \"N/A\"));\n  })), /*#__PURE__*/React.createElement(Divider, {\n    className: divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    className: containerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, \"Non-vegetarian food Details\")), /*#__PURE__*/React.createElement(Box, {\n    className: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, retailSurveyNonVegetarianData.map(function (item, index) {\n    var _survey$nonveg_food_i, _survey$nonveg_food_i2, _survey$nonveg_food_i3, _survey$nonveg_food_i4, _survey$nonveg_food_i5, _survey$nonveg_food_i6;\n\n    return /*#__PURE__*/React.createElement(Box, {\n      key: index,\n      className: dataBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      className: labelBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    }, item.label)), item.value === \"meat_products_consumed\" && (survey === null || survey === void 0 ? void 0 : (_survey$nonveg_food_i = survey.nonveg_food_info) === null || _survey$nonveg_food_i === void 0 ? void 0 : (_survey$nonveg_food_i2 = _survey$nonveg_food_i.meat_products_consumed) === null || _survey$nonveg_food_i2 === void 0 ? void 0 : _survey$nonveg_food_i2.length) > 0 ? survey === null || survey === void 0 ? void 0 : (_survey$nonveg_food_i3 = survey.nonveg_food_info) === null || _survey$nonveg_food_i3 === void 0 ? void 0 : _survey$nonveg_food_i3.meat_products_consumed.map(function (item1, index) {\n      return /*#__PURE__*/React.createElement(Box, {\n        className: inputBox,\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 40\n        }\n      }, item1 ? item1 : 'N/A');\n    }) : item.value === \"meat_type\" && (survey === null || survey === void 0 ? void 0 : (_survey$nonveg_food_i4 = survey.nonveg_food_info) === null || _survey$nonveg_food_i4 === void 0 ? void 0 : (_survey$nonveg_food_i5 = _survey$nonveg_food_i4.meat_type) === null || _survey$nonveg_food_i5 === void 0 ? void 0 : _survey$nonveg_food_i5.length) > 0 ? survey === null || survey === void 0 ? void 0 : (_survey$nonveg_food_i6 = survey.nonveg_food_info) === null || _survey$nonveg_food_i6 === void 0 ? void 0 : _survey$nonveg_food_i6.meat_type.map(function (item1, index) {\n      return /*#__PURE__*/React.createElement(Box, {\n        className: inputBox,\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 48\n        }\n      }, item1 ? item1 : 'N/A');\n    }) : /*#__PURE__*/React.createElement(Box, {\n      className: inputBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 37\n      }\n    }, (survey === null || survey === void 0 ? void 0 : survey.nonveg_food_info) && (survey === null || survey === void 0 ? void 0 : survey.nonveg_food_info[item.value]) ? survey === null || survey === void 0 ? void 0 : survey.nonveg_food_info[item.value] : \"N/A\"));\n  })), /*#__PURE__*/React.createElement(Divider, {\n    className: divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    className: containerTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, \"Health and hygiene Details\")), /*#__PURE__*/React.createElement(Box, {\n    className: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, retailSurveyHealthAndHygieneInfo.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Box, {\n      key: index,\n      className: dataBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      className: labelBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 29\n      }\n    }, item.label)), /*#__PURE__*/React.createElement(Box, {\n      className: inputBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 25\n      }\n    }, (survey === null || survey === void 0 ? void 0 : survey.health_hygiene_info) && (survey === null || survey === void 0 ? void 0 : survey.health_hygiene_info[item.value]) ? survey === null || survey === void 0 ? void 0 : survey.health_hygiene_info[item.value] : \"N/A\"));\n  })), /*#__PURE__*/React.createElement(Divider, {\n    className: divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default withStyles(useStyles, {\n  withTheme: true\n})(ViewRetailSurvey);","map":{"version":3,"sources":["/Users/subhashbeniwal/Downloads/material-dashboard-react-master/src/views/Dashboard/surveys/retailSurvey/viewSurvey.js"],"names":["React","useEffect","useState","FirebaseDataService","auth","Box","Divider","Typography","withStyles","useStyles","retailSurveyAgentInfo","retailSurveyCustomerData","retailSurveyDairyData","retailSurveyFruitsAndVegetablesData","retailSurveyGroceryData","retailSurveyHealthAndHygieneInfo","retailSurveyNonVegetarianData","ViewRetailSurvey","props","classes","main","container","dataBox","labelBox","inputBox","containerTitle","divider","survey","setSurvey","checkIfLoggedIn","getSurvey","match","params","id","onAuthStateChanged","user","history","push","deleteSurvey","then","e","console","log","data","_getDateTime","time","Date","toDateString","toLocaleTimeString","map","item","index","label","dateType","value","basic_info","dairy_info","fruits_veg_info","purchase_source","length","item1","exotic_vegetables","grocery_info","grocery_purchase_source","sugar_products","nonveg_food_info","meat_products_consumed","meat_type","health_hygiene_info","withTheme"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport FirebaseDataService from \"../../../../services/firebase.service\";\nimport {auth} from \"../../../../services/firebase\";\nimport {Box, Divider, Typography} from \"@material-ui/core\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {useStyles} from \"../internSurvey/viewSurveyStyles\";\nimport {\n    retailSurveyAgentInfo,\n    retailSurveyCustomerData,\n    retailSurveyDairyData,\n    retailSurveyFruitsAndVegetablesData,\n    retailSurveyGroceryData,\n    retailSurveyHealthAndHygieneInfo,\n    retailSurveyNonVegetarianData\n} from \"./constants\";\n\n\nfunction ViewRetailSurvey(props) {\n    const {classes} = props;\n    const {main, container, dataBox, labelBox, inputBox, containerTitle, divider} = classes;\n    const [survey, setSurvey] = useState('')\n\n    useEffect(() => {\n        checkIfLoggedIn();\n        getSurvey(props.match.params.id)\n    }, [])\n\n    const checkIfLoggedIn = () => {\n        auth.onAuthStateChanged((user) => {\n            if (user) {\n                // User is signed in.\n                // console.log(user);\n            } else {\n                // No user is signed in.\n                // console.log(\"logged out\");\n                props.history.push(\"/login\")\n            }\n        });\n    }\n\n    const deleteSurvey = (id) => {\n        FirebaseDataService.deleteSurvey(id)\n            .then(() => {\n                // console.log(\"Deleted survey successfully!\");\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    const getSurvey = (id) => {\n        FirebaseDataService.getSurvey(id, 'retail')\n            .then((data) => {\n                setSurvey(data.data())\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    const _getDateTime = (time) => {\n        return time ? (new Date(time).toDateString() + \" - \" + new Date(time).toLocaleTimeString()) : 'N/A'\n    }\n\n\n    return (\n        <Box className={main}>\n            <Box className={containerTitle}>\n                <Typography variant={\"h5\"}>\n                    Agent Details\n                </Typography>\n            </Box>\n            <Box className={container}>\n                {retailSurveyAgentInfo.map((item, index) => {\n                    return <Box key={index} className={dataBox}>\n                        <Box className={labelBox}>\n                            <Typography variant={\"body1\"}>\n                                {item.label}\n                            </Typography>\n                        </Box>\n                        <Box className={inputBox}>\n                            {survey ? (item.dateType ? _getDateTime(survey[item.value]) : survey[item.value]) : \"N/A\"}\n                        </Box>\n                    </Box>\n                })}\n            </Box>\n            <Divider className={divider}/>\n\n            <Box className={containerTitle}>\n                <Typography variant={\"h5\"}>\n                    Customer Details\n                </Typography>\n            </Box>\n            <Box className={container}>\n                {retailSurveyCustomerData.map((item, index) => {\n                    return <Box key={index} className={dataBox}>\n                        <Box className={labelBox}>\n                            <Typography variant={\"body1\"}>\n                                {item.label}\n                            </Typography>\n                        </Box>\n                        <Box className={inputBox}>\n                            {survey?.basic_info && survey?.basic_info[item.value] ? survey?.basic_info[item.value] : \"N/A\"}\n                        </Box>\n                    </Box>\n                })}\n            </Box>\n            <Divider className={divider}/>\n\n            <Box className={containerTitle}>\n                <Typography variant={\"h5\"}>\n                    Dairy Details\n                </Typography>\n            </Box>\n            <Box className={container}>\n                {retailSurveyDairyData.map((item, index) => {\n                    return <Box key={index} className={dataBox}>\n                        <Box className={labelBox}>\n                            <Typography variant={\"body1\"}>\n                                {item.label}\n                            </Typography>\n                        </Box>\n                        <Box className={inputBox}>\n                            {survey?.dairy_info && survey?.dairy_info[item.value] ? survey?.dairy_info[item.value] : \"N/A\"}\n                        </Box>\n                    </Box>\n                })}\n            </Box>\n            <Divider className={divider}/>\n\n            <Box className={containerTitle}>\n                <Typography variant={\"h5\"}>\n                    Fruits and vegetables Details\n                </Typography>\n            </Box>\n            <Box className={container}>\n                {retailSurveyFruitsAndVegetablesData.map((item, index) => {\n                    return <Box key={index} className={dataBox}>\n                        <Box className={labelBox}>\n                            <Typography variant={\"body1\"}>\n                                {item.label}\n                            </Typography>\n                        </Box>\n                        {item.value === \"purchase_source\" && survey?.fruits_veg_info?.purchase_source?.length > 0 ?\n                            survey?.fruits_veg_info?.purchase_source.map((item1, index) => {\n                                return <Box className={inputBox} key={index}>\n                                    {item1 ? item1 : 'N/A'}\n                                </Box>\n                            })\n                            :\n                            (item.value === \"exotic_vegetables\" && survey?.fruits_veg_info?.exotic_vegetables?.length > 0 ?\n                                    survey?.fruits_veg_info?.exotic_vegetables.map((item1, index) => {\n                                        return <Box className={inputBox} key={index}>\n                                            {item1 ? item1 : 'N/A'}\n                                        </Box>\n                                    })\n                                    : <Box className={inputBox}>\n                                        {survey?.fruits_veg_info && survey?.fruits_veg_info[item.value] ? survey?.fruits_veg_info[item.value] : \"N/A\"}\n                                    </Box>\n                            )}\n                    </Box>\n                })}\n            </Box>\n            <Divider className={divider}/>\n\n            <Box className={containerTitle}>\n                <Typography variant={\"h5\"}>\n                    Grocery Details\n                </Typography>\n            </Box>\n            <Box className={container}>\n                {retailSurveyGroceryData.map((item, index) => {\n                    return <Box key={index} className={dataBox}>\n                        <Box className={labelBox}>\n                            <Typography variant={\"body1\"}>\n                                {item.label}\n                            </Typography>\n                        </Box>\n                        {item.value === \"grocery_purchase_source\" && survey?.grocery_info?.grocery_purchase_source?.length > 0 ?\n                            survey?.grocery_info?.grocery_purchase_source.map((item1, index) => {\n                                return <Box className={inputBox} key={index}>\n                                    {item1 ? item1 : 'N/A'}\n                                </Box>\n                            })\n                            :\n                            (item.value === \"sugar_products\" && survey?.grocery_info?.sugar_products?.length > 0 ?\n                                    survey?.grocery_info?.sugar_products.map((item1, index) => {\n                                        return <Box className={inputBox} key={index}>\n                                            {item1 ? item1 : 'N/A'}\n                                        </Box>\n                                    })\n                                    :\n                                    <Box className={inputBox}>\n                                        {survey?.grocery_info && survey?.grocery_info[item.value] ? survey?.grocery_info[item.value] : \"N/A\"}\n                                    </Box>\n                            )}\n                    </Box>\n                })}\n            </Box>\n            <Divider className={divider}/>\n\n            <Box className={containerTitle}>\n                <Typography variant={\"h5\"}>\n                    Non-vegetarian food Details\n                </Typography>\n            </Box>\n            <Box className={container}>\n                {retailSurveyNonVegetarianData.map((item, index) => {\n                    return <Box key={index} className={dataBox}>\n                        <Box className={labelBox}>\n                            <Typography variant={\"body1\"}>\n                                {item.label}\n                            </Typography>\n                        </Box>\n                        {item.value === \"meat_products_consumed\" && survey?.nonveg_food_info?.meat_products_consumed?.length > 0 ?\n                            survey?.nonveg_food_info?.meat_products_consumed.map((item1, index) => {\n                                return <Box className={inputBox} key={index}>\n                                    {item1 ? item1 : 'N/A'}\n                                </Box>\n                            })\n                            :\n                            (item.value === \"meat_type\" && survey?.nonveg_food_info?.meat_type?.length > 0 ?\n                                    survey?.nonveg_food_info?.meat_type.map((item1, index) => {\n                                        return <Box className={inputBox} key={index}>\n                                            {item1 ? item1 : 'N/A'}\n                                        </Box>\n                                    })\n                                    :\n                                    <Box className={inputBox}>\n                                        {survey?.nonveg_food_info && survey?.nonveg_food_info[item.value] ? survey?.nonveg_food_info[item.value] : \"N/A\"}\n                                    </Box>\n                            )}\n                    </Box>\n                })}\n            </Box>\n            <Divider className={divider}/>\n\n            <Box className={containerTitle}>\n                <Typography variant={\"h5\"}>\n                    Health and hygiene Details\n                </Typography>\n            </Box>\n            <Box className={container}>\n                {retailSurveyHealthAndHygieneInfo.map((item, index) => {\n                    return <Box key={index} className={dataBox}>\n                        <Box className={labelBox}>\n                            <Typography variant={\"body1\"}>\n                                {item.label}\n                            </Typography>\n                        </Box>\n                        <Box className={inputBox}>\n                            {survey?.health_hygiene_info && survey?.health_hygiene_info[item.value] ? survey?.health_hygiene_info[item.value] : \"N/A\"}\n                        </Box>\n                    </Box>\n                })}\n            </Box>\n            <Divider className={divider}/>\n\n        </Box>\n    );\n}\n\nexport default withStyles(useStyles, {withTheme: true})(ViewRetailSurvey);"]},"metadata":{},"sourceType":"module"}