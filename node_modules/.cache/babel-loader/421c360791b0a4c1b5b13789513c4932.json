{"ast":null,"code":"import _slicedToArray from \"/Users/subhashbeniwal/Downloads/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/subhashbeniwal/Downloads/material-dashboard-react-master/src/views/Dashboard/surveys/internSurvey/surveyList.js\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport FirebaseDataService from \"../../../../services/firebase.service\"; // import {Table, Button} from 'reactstrap';\n\nimport { auth } from \"../../../../services/firebase\";\nimport Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\nimport GridItem from \"../../../../components/Grid/GridItem\";\nimport Card from \"../../../../components/Card/Card\";\nimport CardHeader from \"../../../../components/Card/CardHeader\";\nimport CardBody from \"../../../../components/Card/CardBody\";\nimport GridContainer from \"../../../../components/Grid/GridContainer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nvar styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n};\nvar useStyles = makeStyles(styles);\n\nfunction InternSurvey(props) {\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      surveyList = _useState2[0],\n      setSurveyList = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      all = _useState6[0],\n      setAll = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      submitted = _useState8[0],\n      setSubmitted = _useState8[1];\n\n  useEffect(function () {\n    auth.onAuthStateChanged(function (user) {\n      if (user) {// User is signed in.\n        // console.log(user);\n      } else {\n        // No user is signed in.\n        // console.log(\"logged out\");\n        props.history.push(\"/login\");\n      }\n    });\n    FirebaseDataService.getSurveys('intern').onSnapshot(onDataChange); // unsubscribe();\n  }, []);\n\n  var onDataChange = function onDataChange(items) {\n    var surveys = [];\n    items.forEach(function (item) {\n      // let id = item.id;\n      var data = item.data();\n      surveys.push(data);\n    });\n    setSurveyList(surveys);\n  };\n\n  var onChangeTitle = function onChangeTitle(e) {\n    setTitle(e.target.value);\n  };\n\n  var onChangeDescription = function onChangeDescription(e) {\n    setAll(e.target.value);\n  };\n\n  var groupArrayOfObjects = function groupArrayOfObjects(list, key) {\n    return list.reduce(function (rv, x) {\n      (rv[x[key]] = rv[x[key]] || []).push(x);\n      return rv;\n    }, {});\n  };\n\n  var saveCommodities = function saveCommodities() {\n    var list = JSON.parse(all);\n    var states = groupArrayOfObjects(list, 'state');\n    var keys = Object.keys(states);\n    keys.forEach(function (key) {\n      pushState(key, {\n        all: JSON.stringify(states[key])\n      });\n    });\n  };\n\n  var pushState = function pushState(state, data) {\n    FirebaseDataService.setCommodity(state, data).then(function () {\n      // console.log(\"Updated commodities successfully!\");\n      setSubmitted(true);\n    })[\"catch\"](function (e) {\n      console.log(e);\n    });\n  };\n\n  var deleteSurvey = function deleteSurvey(id) {\n    FirebaseDataService.deleteSurvey(id, 'intern').then(function () {// console.log(\"Deleted survey successfully!\");\n    })[\"catch\"](function (e) {\n      console.log(e);\n    });\n  };\n\n  var openSurvey = function openSurvey(id) {\n    props.history.push(\"/surveys/intern/\" + id);\n  };\n\n  var _getDateTime = function _getDateTime(time) {\n    return time ? new Date(time).toDateString() + \" - \" + new Date(time).toLocaleTimeString() : 'NA';\n  };\n\n  return /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, \"Simple Table\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.cardCategoryWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }, \"Here is a subtitle for this table\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    tableHeaderColor: \"primary\",\n    tableHead: [\"Name\", \"Country\", \"City\", \"Salary\"],\n    tableData: [[\"Dakota Rice\", \"Niger\", \"Oud-Turnhout\", \"$36,738\"], [\"Minerva Hooper\", \"Curaçao\", \"Sinaai-Waas\", \"$23,789\"], [\"Sage Rodriguez\", \"Netherlands\", \"Baileux\", \"$56,142\"], [\"Philip Chaney\", \"Korea, South\", \"Overland Park\", \"$38,735\"], [\"Doris Greene\", \"Malawi\", \"Feldkirchen in Kärnten\", \"$63,542\"], [\"Mason Porter\", \"Chile\", \"Gloucester\", \"$78,615\"]],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  })))));\n}\n\nexport default InternSurvey;","map":{"version":3,"sources":["/Users/subhashbeniwal/Downloads/material-dashboard-react-master/src/views/Dashboard/surveys/internSurvey/surveyList.js"],"names":["React","Component","useEffect","useState","FirebaseDataService","auth","Table","Button","GridItem","Card","CardHeader","CardBody","GridContainer","makeStyles","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","lineHeight","useStyles","InternSurvey","props","classes","surveyList","setSurveyList","title","setTitle","all","setAll","submitted","setSubmitted","onAuthStateChanged","user","history","push","getSurveys","onSnapshot","onDataChange","items","surveys","forEach","item","data","onChangeTitle","e","target","value","onChangeDescription","groupArrayOfObjects","list","key","reduce","rv","x","saveCommodities","JSON","parse","states","keys","Object","pushState","stringify","state","setCommodity","then","console","log","deleteSurvey","id","openSurvey","_getDateTime","time","Date","toDateString","toLocaleTimeString"],"mappings":"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","sourcesContent":["import React, {Component, useEffect, useState} from \"react\";\nimport FirebaseDataService from \"../../../../services/firebase.service\";\n// import {Table, Button} from 'reactstrap';\nimport {auth} from \"../../../../services/firebase\";\nimport Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\nimport GridItem from \"../../../../components/Grid/GridItem\";\nimport Card from \"../../../../components/Card/Card\";\nimport CardHeader from \"../../../../components/Card/CardHeader\";\nimport CardBody from \"../../../../components/Card/CardBody\";\nimport GridContainer from \"../../../../components/Grid/GridContainer\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst styles = {\n    cardCategoryWhite: {\n        \"&,& a,& a:hover,& a:focus\": {\n            color: \"rgba(255,255,255,.62)\",\n            margin: \"0\",\n            fontSize: \"14px\",\n            marginTop: \"0\",\n            marginBottom: \"0\"\n        },\n        \"& a,& a:hover,& a:focus\": {\n            color: \"#FFFFFF\"\n        }\n    },\n    cardTitleWhite: {\n        color: \"#FFFFFF\",\n        marginTop: \"0px\",\n        minHeight: \"auto\",\n        fontWeight: \"300\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: \"3px\",\n        textDecoration: \"none\",\n        \"& small\": {\n            color: \"#777\",\n            fontSize: \"65%\",\n            fontWeight: \"400\",\n            lineHeight: \"1\"\n        }\n    }\n};\n\nconst useStyles = makeStyles(styles);\n\nfunction InternSurvey(props) {\n    const classes = useStyles();\n    const [surveyList, setSurveyList] = useState([])\n    const [title, setTitle] = useState('')\n    const [all, setAll] = useState('')\n    const [submitted, setSubmitted] = useState(false)\n    useEffect(()=>{\n        auth.onAuthStateChanged((user) => {\n            if (user) {\n                // User is signed in.\n                // console.log(user);\n            } else {\n                // No user is signed in.\n                // console.log(\"logged out\");\n                props.history.push(\"/login\")\n            }\n        });\n        FirebaseDataService.getSurveys('intern').onSnapshot(onDataChange);\n        // unsubscribe();\n},[])\n\n\n\n    const onDataChange = (items) => {\n        let surveys = [];\n\n        items.forEach((item) => {\n            // let id = item.id;\n            let data = item.data();\n            surveys.push(data);\n        });\n\n\n            setSurveyList(surveys)\n\n    }\n\n    const onChangeTitle = (e) =>{\n            setTitle(e.target.value)\n    }\n\n    const onChangeDescription=(e) => {\n       setAll(e.target.value)\n    }\n\n    const groupArrayOfObjects = (list, key) => {\n        return list.reduce(function (rv, x) {\n            (rv[x[key]] = rv[x[key]] || []).push(x);\n            return rv;\n        }, {});\n    }\n\n    const saveCommodities = () => {\n        let list = JSON.parse(all);\n        let states = groupArrayOfObjects(list, 'state');\n        let keys = Object.keys(states);\n        keys.forEach(key => {\n            pushState(key, {all: JSON.stringify(states[key])});\n        });\n    }\n\n   const  pushState =(state, data) => {\n        FirebaseDataService.setCommodity(state, data)\n            .then(() => {\n                // console.log(\"Updated commodities successfully!\");\n                setSubmitted(true)\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    const deleteSurvey = (id) => {\n        FirebaseDataService.deleteSurvey(id, 'intern')\n            .then(() => {\n                // console.log(\"Deleted survey successfully!\");\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n   const openSurvey = (id) => {\n        props.history.push(\"/surveys/intern/\" + id)\n    }\n\n   const _getDateTime = (time) => {\n        return time ? (new Date(time).toDateString() + \" - \" + new Date(time).toLocaleTimeString()) : 'NA'\n    }\n\n\n        return (\n            <GridContainer>\n                <GridItem xs={12} sm={12} md={12}>\n                    <Card>\n                        <CardHeader color=\"primary\">\n                            <h4 className={classes.cardTitleWhite}>Simple Table</h4>\n                            <p className={classes.cardCategoryWhite}>\n                                Here is a subtitle for this table\n                            </p>\n                        </CardHeader>\n                        <CardBody>\n                            <Table\n                                tableHeaderColor=\"primary\"\n                                tableHead={[\"Name\", \"Country\", \"City\", \"Salary\"]}\n                                tableData={[\n                                    [\"Dakota Rice\", \"Niger\", \"Oud-Turnhout\", \"$36,738\"],\n                                    [\"Minerva Hooper\", \"Curaçao\", \"Sinaai-Waas\", \"$23,789\"],\n                                    [\"Sage Rodriguez\", \"Netherlands\", \"Baileux\", \"$56,142\"],\n                                    [\"Philip Chaney\", \"Korea, South\", \"Overland Park\", \"$38,735\"],\n                                    [\"Doris Greene\", \"Malawi\", \"Feldkirchen in Kärnten\", \"$63,542\"],\n                                    [\"Mason Porter\", \"Chile\", \"Gloucester\", \"$78,615\"]\n                                ]}\n                            />\n                            {/*<Table*/}\n                            {/*    tableHeaderColor=\"primary\"*/}\n                            {/*    tableHead={*/}\n                            {/*    [*/}\n                            {/*        \"#\",*/}\n                            {/*        \"Farmer's Name\",*/}\n                            {/*        \"Address\",*/}\n                            {/*        \"Mobile\",*/}\n                            {/*        \"Total Cultivated Land (in acres)\",*/}\n                            {/*        \"Crops Sold for Farm Earning (in percent)\",*/}\n                            {/*        \"Type of Sale\",*/}\n                            {/*        \"Time/Date\",*/}\n                            {/*        \"Agent name - (ID)\",*/}\n                            {/*        \"Is the farmer linked to any FPO?\",*/}\n                            {/*        \"Do you have a storage facility?\",*/}\n                            {/*        \"Actions\"*/}\n                            {/*    ]*/}\n                            {/*}*/}\n\n                            {/*    tableData={[*/}\n                            {/*    [\"Dakota Rice\", \"Niger\", \"Oud-Turnhout\", \"$36,738\"],*/}\n                            {/*    [\"Minerva Hooper\", \"Curaçao\", \"Sinaai-Waas\", \"$23,789\"],*/}\n                            {/*    [\"Sage Rodriguez\", \"Netherlands\", \"Baileux\", \"$56,142\"],*/}\n                            {/*    [\"Philip Chaney\", \"Korea, South\", \"Overland Park\", \"$38,735\"],*/}\n                            {/*    [\"Doris Greene\", \"Malawi\", \"Feldkirchen in Kärnten\", \"$63,542\"],*/}\n                            {/*    [\"Mason Porter\", \"Chile\", \"Gloucester\", \"$78,615\"]*/}\n                            {/*]}*/}\n                            {/*    />*/}\n                        </CardBody>\n                    </Card>\n                </GridItem>\n            </GridContainer>\n\n    )\n        ;\n\n\n}\nexport default InternSurvey;"]},"metadata":{},"sourceType":"module"}