{"ast":null,"code":"import _classCallCheck from \"/Users/subhashbeniwal/Downloads/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/subhashbeniwal/Downloads/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/subhashbeniwal/Downloads/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/subhashbeniwal/Downloads/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/subhashbeniwal/Downloads/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/subhashbeniwal/Downloads/material-dashboard-react-master/src/views/Dashboard/surveys/internSurvey/surveyList.js\";\nimport React, { Component } from \"react\";\nimport FirebaseDataService from \"../../../../services/firebase.service\"; // import {Table, Button} from 'reactstrap';\n\nimport { auth } from \"../../../../services/firebase\";\nimport Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\nimport GridItem from \"../../../../components/Grid/GridItem\";\nimport Card from \"../../../../components/Card/Card\";\nimport CardHeader from \"../../../../components/Card/CardHeader\";\nimport CardBody from \"../../../../components/Card/CardBody\";\nimport GridContainer from \"../../../../components/Grid/GridContainer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nvar styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n};\nvar useStyles = makeStyles(styles);\n\nvar InternSurvey = /*#__PURE__*/function (_Component) {\n  _inherits(InternSurvey, _Component);\n\n  var _super = _createSuper(InternSurvey);\n\n  function InternSurvey(props) {\n    var _this;\n\n    _classCallCheck(this, InternSurvey);\n\n    _this = _super.call(this, props);\n    _this.onChangeTitle = _this.onChangeTitle.bind(_assertThisInitialized(_this));\n    _this.onChangeDescription = _this.onChangeDescription.bind(_assertThisInitialized(_this));\n    _this.saveTutorial = _this.saveCommodities.bind(_assertThisInitialized(_this)); // this.newTutorial = this.newTutorial.bind(this);\n\n    _this.onDataChange = _this.onDataChange.bind(_assertThisInitialized(_this));\n    _this.deleteSurvey = _this.deleteSurvey.bind(_assertThisInitialized(_this));\n    _this.openSurvey = _this.openSurvey.bind(_assertThisInitialized(_this));\n    _this.state = {\n      surveyList: []\n    };\n    auth.onAuthStateChanged(function (user) {\n      if (user) {// User is signed in.\n        // console.log(user);\n      } else {\n        // No user is signed in.\n        // console.log(\"logged out\");\n        props.history.push(\"/login\");\n      }\n    });\n    return _this;\n  }\n\n  _createClass(InternSurvey, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.unsubscribe = FirebaseDataService.getSurveys().orderBy(\"title\", \"asc\").onSnapshot(this.onDataChange);\n      this.unsubscribe = FirebaseDataService.getSurveys('intern').onSnapshot(this.onDataChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"onDataChange\",\n    value: function onDataChange(items) {\n      var surveys = [];\n      items.forEach(function (item) {\n        // let id = item.id;\n        var data = item.data();\n        surveys.push(data);\n      });\n      this.setState({\n        surveyList: surveys\n      });\n    }\n  }, {\n    key: \"onChangeTitle\",\n    value: function onChangeTitle(e) {\n      this.setState({\n        title: e.target.value\n      });\n    }\n  }, {\n    key: \"onChangeDescription\",\n    value: function onChangeDescription(e) {\n      this.setState({\n        all: e.target.value\n      });\n    }\n  }, {\n    key: \"groupArrayOfObjects\",\n    value: function groupArrayOfObjects(list, key) {\n      return list.reduce(function (rv, x) {\n        (rv[x[key]] = rv[x[key]] || []).push(x);\n        return rv;\n      }, {});\n    }\n  }, {\n    key: \"saveCommodities\",\n    value: function saveCommodities() {\n      var _this2 = this;\n\n      var list = JSON.parse(this.state.all);\n      var states = this.groupArrayOfObjects(list, 'state');\n      var keys = Object.keys(states);\n      keys.forEach(function (key) {\n        _this2.pushState(key, {\n          all: JSON.stringify(states[key])\n        });\n      });\n    }\n  }, {\n    key: \"pushState\",\n    value: function pushState(state, data) {\n      var _this3 = this;\n\n      FirebaseDataService.setCommodity(state, data).then(function () {\n        // console.log(\"Updated commodities successfully!\");\n        _this3.setState({\n          submitted: true\n        });\n      })[\"catch\"](function (e) {\n        console.log(e);\n      });\n    }\n  }, {\n    key: \"deleteSurvey\",\n    value: function deleteSurvey(id) {\n      FirebaseDataService.deleteSurvey(id, 'intern').then(function () {// console.log(\"Deleted survey successfully!\");\n      })[\"catch\"](function (e) {\n        console.log(e);\n      });\n    }\n  }, {\n    key: \"openSurvey\",\n    value: function openSurvey(id) {\n      this.props.history.push(\"/surveys/intern/\" + id);\n    }\n  }, {\n    key: \"_getDateTime\",\n    value: function _getDateTime(time) {\n      return time ? new Date(time).toDateString() + \" - \" + new Date(time).toLocaleTimeString() : 'NA';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _useStyles = useStyles(),\n          classes = _useStyles.classes;\n\n      return /*#__PURE__*/React.createElement(GridContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: classes.cardTitleWhite,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }\n      }, \"Simple Table\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: classes.cardCategoryWhite,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }\n      }, \"Here is a subtitle for this table\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        tableHeaderColor: \"primary\",\n        tableHead: [\"#\", \"Farmer's Name\", \"Address\", \"Mobile\", \"Total Cultivated Land (in acres)\", \"Crops Sold for Farm Earning (in percent)\", \"Type of Sale\", \"Time/Date\", \"Agent name - (ID)\", \"Is the farmer linked to any FPO?\", \"Do you have a storage facility?\", \"Actions\"],\n        tableData: [[\"Dakota Rice\", \"Niger\", \"Oud-Turnhout\", \"$36,738\"], [\"Minerva Hooper\", \"Curaçao\", \"Sinaai-Waas\", \"$23,789\"], [\"Sage Rodriguez\", \"Netherlands\", \"Baileux\", \"$56,142\"], [\"Philip Chaney\", \"Korea, South\", \"Overland Park\", \"$38,735\"], [\"Doris Greene\", \"Malawi\", \"Feldkirchen in Kärnten\", \"$63,542\"], [\"Mason Porter\", \"Chile\", \"Gloucester\", \"$78,615\"]],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 29\n        }\n      })))));\n    }\n  }]);\n\n  return InternSurvey;\n}(Component);\n\nexport default InternSurvey;","map":{"version":3,"sources":["/Users/subhashbeniwal/Downloads/material-dashboard-react-master/src/views/Dashboard/surveys/internSurvey/surveyList.js"],"names":["React","Component","FirebaseDataService","auth","Table","Button","GridItem","Card","CardHeader","CardBody","GridContainer","makeStyles","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","lineHeight","useStyles","InternSurvey","props","onChangeTitle","bind","onChangeDescription","saveTutorial","saveCommodities","onDataChange","deleteSurvey","openSurvey","state","surveyList","onAuthStateChanged","user","history","push","unsubscribe","getSurveys","onSnapshot","items","surveys","forEach","item","data","setState","e","title","target","value","all","list","key","reduce","rv","x","JSON","parse","states","groupArrayOfObjects","keys","Object","pushState","stringify","setCommodity","then","submitted","console","log","id","time","Date","toDateString","toLocaleTimeString","classes"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport FirebaseDataService from \"../../../../services/firebase.service\";\n// import {Table, Button} from 'reactstrap';\nimport {auth} from \"../../../../services/firebase\";\nimport Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\nimport GridItem from \"../../../../components/Grid/GridItem\";\nimport Card from \"../../../../components/Card/Card\";\nimport CardHeader from \"../../../../components/Card/CardHeader\";\nimport CardBody from \"../../../../components/Card/CardBody\";\nimport GridContainer from \"../../../../components/Grid/GridContainer\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst styles = {\n    cardCategoryWhite: {\n        \"&,& a,& a:hover,& a:focus\": {\n            color: \"rgba(255,255,255,.62)\",\n            margin: \"0\",\n            fontSize: \"14px\",\n            marginTop: \"0\",\n            marginBottom: \"0\"\n        },\n        \"& a,& a:hover,& a:focus\": {\n            color: \"#FFFFFF\"\n        }\n    },\n    cardTitleWhite: {\n        color: \"#FFFFFF\",\n        marginTop: \"0px\",\n        minHeight: \"auto\",\n        fontWeight: \"300\",\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n        marginBottom: \"3px\",\n        textDecoration: \"none\",\n        \"& small\": {\n            color: \"#777\",\n            fontSize: \"65%\",\n            fontWeight: \"400\",\n            lineHeight: \"1\"\n        }\n    }\n};\n\nconst useStyles = makeStyles(styles);\n\nclass InternSurvey extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeDescription = this.onChangeDescription.bind(this);\n        this.saveTutorial = this.saveCommodities.bind(this);\n        // this.newTutorial = this.newTutorial.bind(this);\n        this.onDataChange = this.onDataChange.bind(this);\n        this.deleteSurvey = this.deleteSurvey.bind(this);\n        this.openSurvey = this.openSurvey.bind(this);\n\n\n        this.state = {\n            surveyList: [],\n        };\n        auth.onAuthStateChanged((user) => {\n            if (user) {\n                // User is signed in.\n                // console.log(user);\n            } else {\n                // No user is signed in.\n                // console.log(\"logged out\");\n                props.history.push(\"/login\")\n            }\n        });\n    }\n\n    componentDidMount() {\n        // this.unsubscribe = FirebaseDataService.getSurveys().orderBy(\"title\", \"asc\").onSnapshot(this.onDataChange);\n        this.unsubscribe = FirebaseDataService.getSurveys('intern').onSnapshot(this.onDataChange);\n    }\n\n    componentWillUnmount() {\n        this.unsubscribe();\n    }\n\n    onDataChange(items) {\n        let surveys = [];\n\n        items.forEach((item) => {\n            // let id = item.id;\n            let data = item.data();\n            surveys.push(data);\n        });\n\n        this.setState({\n            surveyList: surveys,\n        });\n    }\n\n    onChangeTitle(e) {\n        this.setState({\n            title: e.target.value,\n        });\n    }\n\n    onChangeDescription(e) {\n        this.setState({\n            all: e.target.value,\n        });\n    }\n\n    groupArrayOfObjects(list, key) {\n        return list.reduce(function (rv, x) {\n            (rv[x[key]] = rv[x[key]] || []).push(x);\n            return rv;\n        }, {});\n    }\n\n    saveCommodities() {\n        let list = JSON.parse(this.state.all);\n        let states = this.groupArrayOfObjects(list, 'state');\n        let keys = Object.keys(states);\n        keys.forEach(key => {\n            this.pushState(key, {all: JSON.stringify(states[key])});\n        });\n    }\n\n    pushState(state, data) {\n        FirebaseDataService.setCommodity(state, data)\n            .then(() => {\n                // console.log(\"Updated commodities successfully!\");\n                this.setState({\n                    submitted: true,\n                });\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    deleteSurvey(id) {\n        FirebaseDataService.deleteSurvey(id, 'intern')\n            .then(() => {\n                // console.log(\"Deleted survey successfully!\");\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    openSurvey(id) {\n        this.props.history.push(\"/surveys/intern/\" + id)\n    }\n\n    _getDateTime(time) {\n        return time ? (new Date(time).toDateString() + \" - \" + new Date(time).toLocaleTimeString()) : 'NA'\n    }\n\n    render() {\n        const {classes} = useStyles();\n        return (\n            <GridContainer>\n                <GridItem xs={12} sm={12} md={12}>\n                    <Card>\n                        <CardHeader color=\"primary\">\n                            <h4 className={classes.cardTitleWhite}>Simple Table</h4>\n                            <p className={classes.cardCategoryWhite}>\n                                Here is a subtitle for this table\n                            </p>\n                        </CardHeader>\n                        <CardBody>\n                            <Table\n                                tableHeaderColor=\"primary\"\n                                tableHead={\n                                [\n                                    \"#\",\n                                    \"Farmer's Name\",\n                                    \"Address\",\n                                    \"Mobile\",\n                                    \"Total Cultivated Land (in acres)\",\n                                    \"Crops Sold for Farm Earning (in percent)\",\n                                    \"Type of Sale\",\n                                    \"Time/Date\",\n                                    \"Agent name - (ID)\",\n                                    \"Is the farmer linked to any FPO?\",\n                                    \"Do you have a storage facility?\",\n                                    \"Actions\"\n                                ]\n                            }\n\n                                tableData={[\n                                [\"Dakota Rice\", \"Niger\", \"Oud-Turnhout\", \"$36,738\"],\n                                [\"Minerva Hooper\", \"Curaçao\", \"Sinaai-Waas\", \"$23,789\"],\n                                [\"Sage Rodriguez\", \"Netherlands\", \"Baileux\", \"$56,142\"],\n                                [\"Philip Chaney\", \"Korea, South\", \"Overland Park\", \"$38,735\"],\n                                [\"Doris Greene\", \"Malawi\", \"Feldkirchen in Kärnten\", \"$63,542\"],\n                                [\"Mason Porter\", \"Chile\", \"Gloucester\", \"$78,615\"]\n                            ]}\n                                />\n                        </CardBody>\n                    </Card>\n                </GridItem>\n            </GridContainer>\n\n    )\n        ;\n    }\n\n}\nexport default InternSurvey;"]},"metadata":{},"sourceType":"module"}