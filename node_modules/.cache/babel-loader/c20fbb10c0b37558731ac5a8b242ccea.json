{"ast":null,"code":"import _slicedToArray from \"/Users/subhashbeniwal/Repos/subhash/sfedDashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/subhashbeniwal/Repos/subhash/sfedDashboard/src/views/Dashboard/Dashboard.js\";\nimport React, { useEffect, useState } from \"react\"; // react plugin for creating charts\n\nimport ChartistGraph from \"react-chartist\"; // @material-ui/core\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Store from \"@material-ui/icons/Store\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\nimport Update from \"@material-ui/icons/Update\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport Accessibility from \"@material-ui/icons/Accessibility\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Tasks from \"components/Tasks/Tasks.js\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport Danger from \"components/Typography/Danger.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport { bugs, website, server } from \"variables/general.js\";\nimport { dailySalesChart, emailsSubscriptionChart, completedTasksChart } from \"variables/charts.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { surveyAgentInfo, surveyCropInfo, surveyFarmerInfo, surveySaleInfo } from \"./surveys/internSurvey/constants\";\nimport FirebaseDataService from \"../../services/firebase.service\";\nimport { auth } from \"../../services/firebase\";\nimport moment from 'moment';\nvar useStyles = makeStyles(styles);\nexport default function Dashboard(props) {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      surveyIntern = _useState2[0],\n      setSurveyIntern = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      surveyInternLength = _useState4[0],\n      setSurveyInternLength = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      surveyKisan = _useState6[0],\n      setSurveyKisan = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      surveyKisanLength = _useState8[0],\n      setSurveyKisanLength = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      surveyFarmbook = _useState10[0],\n      setSurveyFarmbook = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      surveyFarmbookLength = _useState12[0],\n      setSurveyFarmbookLength = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      surveyRetail = _useState14[0],\n      setSurveyRetail = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      surveyRetailLength = _useState16[0],\n      setSurveyRetailLength = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      surveyInput = _useState18[0],\n      setSurveyInput = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      surveyInputLength = _useState20[0],\n      setSurveyInputLength = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      surveyAnimal = _useState22[0],\n      setSurveyAnimal = _useState22[1];\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      surveyAnimalLength = _useState24[0],\n      setSurveyAnimalLength = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      surveyEquipment = _useState26[0],\n      setSurveyEquipment = _useState26[1];\n\n  var _useState27 = useState(''),\n      _useState28 = _slicedToArray(_useState27, 2),\n      surveyEquipmentLength = _useState28[0],\n      setSurveyEquipmentLength = _useState28[1];\n\n  var _useState29 = useState('scoutingSurvey'),\n      _useState30 = _slicedToArray(_useState29, 2),\n      clickedItem = _useState30[0],\n      setClickedItem = _useState30[1];\n\n  var allSurveys = [{\n    title: \"Agent Details\",\n    survey: surveyAgentInfo\n  }, {\n    title: \"Farmer Details\",\n    survey: surveyFarmerInfo\n  }, {\n    title: \"Crop Details\",\n    survey: surveyCropInfo\n  }, {\n    title: \"Sale Details\",\n    survey: surveySaleInfo\n  }];\n  useEffect(function () {\n    auth.onAuthStateChanged(function (user) {\n      if (user) {\n        // User is signed in.\n        console.log(user);\n      } else {\n        // No user is signed in.\n        console.log(\"logged out\");\n        props.history.push(\"/login\");\n      }\n    });\n    getInternSurvey();\n    getKisanSurvey();\n    getFarmbookSurvey();\n    getRetailSurvey();\n    getInputSurvey();\n    getAnimalSurvey();\n    getEquipmentSurvey();\n  }, []);\n\n  var getInternSurvey = function getInternSurvey(id) {\n    FirebaseDataService.getSurveys('intern').onSnapshot(onDataChangeIntern);\n  };\n\n  var getKisanSurvey = function getKisanSurvey(id) {\n    FirebaseDataService.getSurveys('kisan').onSnapshot(onDataChangeKisan);\n  };\n\n  var getFarmbookSurvey = function getFarmbookSurvey(id) {\n    FirebaseDataService.getSurveys('farmbook').onSnapshot(onDataChangeFarmbook);\n  };\n\n  var getRetailSurvey = function getRetailSurvey(id) {\n    FirebaseDataService.getSurveys('retail').onSnapshot(onDataChangeRetail);\n  };\n\n  var getInputSurvey = function getInputSurvey(id) {\n    FirebaseDataService.getSurveys('input').onSnapshot(onDataChangeInput);\n  };\n\n  var getAnimalSurvey = function getAnimalSurvey(id) {\n    FirebaseDataService.getSurveys('animal').onSnapshot(onDataChangeAnimal);\n  };\n\n  var getEquipmentSurvey = function getEquipmentSurvey(id) {\n    FirebaseDataService.getSurveys('equipment').onSnapshot(onDataChangeEquipment);\n  };\n\n  var onDataChangeIntern = function onDataChangeIntern(items) {\n    var surveys = [];\n    var survey = [];\n    items.forEach(function (item) {\n      // let id = item.id;\n      var data = item.data();\n      surveys.push(data);\n    }); // allSurveys.map((surv, index) => {\n    //     return (surv.survey.map((item, index) => {\n    //         return (survey.push(\n    //             {\n    //                 key: item.label,\n    //                 value: (surveys.map((item1, index) => {\n    //                     return item1[item.value];\n    //                 }))\n    //             }\n    //         ))\n    //     }))\n    // })\n\n    setSurveyInternLength(surveys.length);\n    console.log(surveys.time);\n    surveys.map(function (item, index) {\n      return survey.push(item);\n    });\n    setSurveyIntern(survey);\n  };\n\n  var onDataChangeKisan = function onDataChangeKisan(items) {\n    var surveys = [];\n    var survey = [];\n    items.forEach(function (item) {\n      // let id = item.id;\n      var data = item.data();\n      surveys.push(data);\n    });\n    setSurveyKisanLength(surveys.length);\n    surveys.map(function (item, index) {\n      return survey.push(item);\n    });\n    setSurveyKisan(survey);\n  };\n\n  var onDataChangeFarmbook = function onDataChangeFarmbook(items) {\n    var surveys = [];\n    var survey = [];\n    items.forEach(function (item) {\n      // let id = item.id;\n      var data = item.data();\n      surveys.push(data);\n    });\n    setSurveyFarmbookLength(surveys.length);\n    surveys.map(function (item, index) {\n      return survey.push(item);\n    });\n    setSurveyFarmbook(survey);\n  };\n\n  var onDataChangeRetail = function onDataChangeRetail(items) {\n    var surveys = [];\n    var survey = [];\n    items.forEach(function (item) {\n      // let id = item.id;\n      var data = item.data();\n      surveys.push(data);\n    });\n    setSurveyRetailLength(surveys.length);\n    surveys.map(function (item, index) {\n      return survey.push(item);\n    });\n    setSurveyRetail(survey);\n  };\n\n  var onDataChangeInput = function onDataChangeInput(items) {\n    var surveys = [];\n    var survey = [];\n    items.forEach(function (item) {\n      // let id = item.id;\n      var data = item.data();\n      surveys.push(data);\n    });\n    setSurveyInputLength(surveys.length);\n    surveys.map(function (item, index) {\n      return survey.push(item);\n    });\n    setSurveyInput(survey);\n  };\n\n  var onDataChangeAnimal = function onDataChangeAnimal(items) {\n    var surveys = [];\n    var survey = [];\n    items.forEach(function (item) {\n      // let id = item.id;\n      var data = item.data();\n      surveys.push(data);\n    });\n    setSurveyAnimalLength(surveys.length);\n    surveys.map(function (item, index) {\n      return survey.push(item);\n    });\n    setSurveyAnimal(survey);\n  };\n\n  var onDataChangeEquipment = function onDataChangeEquipment(items) {\n    var surveys = [];\n    var survey = [];\n    items.forEach(function (item) {\n      // let id = item.id;\n      var data = item.data();\n      surveys.push(data);\n    });\n    setSurveyEquipmentLength(surveys.length);\n    surveys.map(function (item, index) {\n      return survey.push(item);\n    });\n    setSurveyEquipment(survey);\n  };\n\n  var allJsonData = [{\n    id: \"surveyIntern\",\n    data: surveyIntern\n  }, {\n    id: \"surveyFarmbook\",\n    data: surveyFarmbook\n  }, {\n    id: \"surveyKisan\",\n    data: surveyKisan\n  }, {\n    id: \"surveyRetail\",\n    data: surveyRetail\n  } // surveyInput,\n  // surveyAnimal,\n  // surveyEquipment,\n  ];\n\n  var dataFile = function dataFile(item) {\n    return allJsonData.filter(function (jsonData) {\n      console.log(jsonData.id);\n      console.log(item.jsonData === jsonData.id && jsonData.data);\n      return item.jsonData === jsonData.id ? jsonData.data : null;\n    });\n  };\n\n  var dataCards = [{\n    title: \"Intern\",\n    value: surveyInternLength,\n    color: \"warning\",\n    icon: /*#__PURE__*/React.createElement(Store, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 19\n      }\n    }),\n    url: 'internSurvey'\n  }, {\n    title: \"Kisan\",\n    value: surveyKisanLength,\n    color: \"success\",\n    icon: /*#__PURE__*/React.createElement(Store, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 19\n      }\n    }),\n    url: 'kisanSurvey'\n  }, {\n    title: \"Farmbook\",\n    value: surveyFarmbookLength,\n    color: \"danger\",\n    icon: /*#__PURE__*/React.createElement(Store, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 19\n      }\n    }),\n    url: 'farmbookSurvey'\n  }, {\n    title: \"Retail\",\n    value: surveyRetailLength,\n    color: \"info\",\n    icon: /*#__PURE__*/React.createElement(Store, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 19\n      }\n    }),\n    url: 'retailSurvey'\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }, dataCards.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(GridItem, {\n      xs: 12,\n      sm: 6,\n      md: 3,\n      key: index,\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: function onClick(e) {\n        e.preventDefault();\n        props.history.push(\"\".concat(item.url));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      color: item.color,\n      stats: true,\n      icon: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardIcon, {\n      color: item.color,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 33\n      }\n    }, item.icon), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      className: classes.cardTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 33\n      }\n    }, item.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.cardCategory,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 33\n      }\n    }, \"Total Surveys\"), /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.cardTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 33\n      }\n    }, item.value)), /*#__PURE__*/React.createElement(CardFooter, {\n      stats: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.stats,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 40\n      }\n    }, \"Till \")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 37\n      }\n    }, \" - \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 37\n      }\n    }, moment().format('DD/mm/yyyy'))))));\n  })));\n}","map":{"version":3,"sources":["/Users/subhashbeniwal/Repos/subhash/sfedDashboard/src/views/Dashboard/Dashboard.js"],"names":["React","useEffect","useState","ChartistGraph","makeStyles","Icon","Store","Warning","DateRange","LocalOffer","Update","ArrowUpward","AccessTime","Accessibility","BugReport","Code","Cloud","GridItem","GridContainer","Table","Tasks","CustomTabs","Danger","Card","CardHeader","CardIcon","CardBody","CardFooter","bugs","website","server","dailySalesChart","emailsSubscriptionChart","completedTasksChart","styles","surveyAgentInfo","surveyCropInfo","surveyFarmerInfo","surveySaleInfo","FirebaseDataService","auth","moment","useStyles","Dashboard","props","classes","surveyIntern","setSurveyIntern","surveyInternLength","setSurveyInternLength","surveyKisan","setSurveyKisan","surveyKisanLength","setSurveyKisanLength","surveyFarmbook","setSurveyFarmbook","surveyFarmbookLength","setSurveyFarmbookLength","surveyRetail","setSurveyRetail","surveyRetailLength","setSurveyRetailLength","surveyInput","setSurveyInput","surveyInputLength","setSurveyInputLength","surveyAnimal","setSurveyAnimal","surveyAnimalLength","setSurveyAnimalLength","surveyEquipment","setSurveyEquipment","surveyEquipmentLength","setSurveyEquipmentLength","clickedItem","setClickedItem","allSurveys","title","survey","onAuthStateChanged","user","console","log","history","push","getInternSurvey","getKisanSurvey","getFarmbookSurvey","getRetailSurvey","getInputSurvey","getAnimalSurvey","getEquipmentSurvey","id","getSurveys","onSnapshot","onDataChangeIntern","onDataChangeKisan","onDataChangeFarmbook","onDataChangeRetail","onDataChangeInput","onDataChangeAnimal","onDataChangeEquipment","items","surveys","forEach","item","data","length","time","map","index","allJsonData","dataFile","filter","jsonData","dataCards","value","color","icon","url","cursor","e","preventDefault","cardTitle","cardCategory","stats","format"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\n// react plugin for creating charts\nimport ChartistGraph from \"react-chartist\";\n// @material-ui/core\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Store from \"@material-ui/icons/Store\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\nimport Update from \"@material-ui/icons/Update\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport Accessibility from \"@material-ui/icons/Accessibility\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Table from \"components/Table/Table.js\";\nimport Tasks from \"components/Tasks/Tasks.js\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport Danger from \"components/Typography/Danger.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\n\nimport {bugs, website, server} from \"variables/general.js\";\n\nimport {\n    dailySalesChart,\n    emailsSubscriptionChart,\n    completedTasksChart\n} from \"variables/charts.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport {surveyAgentInfo, surveyCropInfo, surveyFarmerInfo, surveySaleInfo} from \"./surveys/internSurvey/constants\";\nimport FirebaseDataService from \"../../services/firebase.service\";\nimport {auth} from \"../../services/firebase\";\nimport moment from 'moment';\n\n\nconst useStyles = makeStyles(styles);\n\nexport default function Dashboard(props) {\n    const classes = useStyles();\n    const [surveyIntern, setSurveyIntern] = useState([]);\n    const [surveyInternLength, setSurveyInternLength] = useState('');\n    const [surveyKisan, setSurveyKisan] = useState([]);\n    const [surveyKisanLength, setSurveyKisanLength] = useState('');\n    const [surveyFarmbook, setSurveyFarmbook] = useState([]);\n    const [surveyFarmbookLength, setSurveyFarmbookLength] = useState('');\n    const [surveyRetail, setSurveyRetail] = useState([]);\n    const [surveyRetailLength, setSurveyRetailLength] = useState('');\n    const [surveyInput, setSurveyInput] = useState([]);\n    const [surveyInputLength, setSurveyInputLength] = useState('');\n    const [surveyAnimal, setSurveyAnimal] = useState([]);\n    const [surveyAnimalLength, setSurveyAnimalLength] = useState('');\n    const [surveyEquipment, setSurveyEquipment] = useState([]);\n    const [surveyEquipmentLength, setSurveyEquipmentLength] = useState('');\n\n    const [clickedItem, setClickedItem] = useState('scoutingSurvey');\n\n    const allSurveys = [\n        {title: \"Agent Details\", survey: surveyAgentInfo,},\n        {title: \"Farmer Details\", survey: surveyFarmerInfo,},\n        {title: \"Crop Details\", survey: surveyCropInfo,},\n        {title: \"Sale Details\", survey: surveySaleInfo,},\n    ];\n\n    useEffect(() => {\n        auth.onAuthStateChanged((user) => {\n            if (user) {\n                // User is signed in.\n                console.log(user);\n            } else {\n                // No user is signed in.\n                console.log(\"logged out\");\n                props.history.push(\"/login\")\n            }\n        });\n        getInternSurvey()\n        getKisanSurvey()\n        getFarmbookSurvey()\n        getRetailSurvey()\n        getInputSurvey()\n        getAnimalSurvey()\n        getEquipmentSurvey()\n    }, []);\n\n    const getInternSurvey = (id) => {\n        FirebaseDataService.getSurveys('intern').onSnapshot(onDataChangeIntern);\n    }\n    const getKisanSurvey = (id) => {\n        FirebaseDataService.getSurveys('kisan').onSnapshot(onDataChangeKisan);\n    }\n    const getFarmbookSurvey = (id) => {\n        FirebaseDataService.getSurveys('farmbook').onSnapshot(onDataChangeFarmbook);\n    }\n    const getRetailSurvey = (id) => {\n        FirebaseDataService.getSurveys('retail').onSnapshot(onDataChangeRetail);\n    }\n    const getInputSurvey = (id) => {\n        FirebaseDataService.getSurveys('input').onSnapshot(onDataChangeInput);\n    }\n    const getAnimalSurvey = (id) => {\n        FirebaseDataService.getSurveys('animal').onSnapshot(onDataChangeAnimal);\n    }\n    const getEquipmentSurvey = (id) => {\n        FirebaseDataService.getSurveys('equipment').onSnapshot(onDataChangeEquipment);\n    }\n\n    const onDataChangeIntern = (items) => {\n        let surveys = [];\n        let survey = [];\n\n        items.forEach((item) => {\n            // let id = item.id;\n            let data = item.data();\n            surveys.push(data);\n        });\n\n        // allSurveys.map((surv, index) => {\n        //     return (surv.survey.map((item, index) => {\n        //         return (survey.push(\n        //             {\n        //                 key: item.label,\n        //                 value: (surveys.map((item1, index) => {\n        //                     return item1[item.value];\n        //                 }))\n        //             }\n        //         ))\n        //     }))\n        // })\n        setSurveyInternLength(surveys.length)\n        console.log(surveys.time)\n        surveys.map((item, index) => {\n            return survey.push(item);\n        })\n        setSurveyIntern(survey)\n    }\n\n    const onDataChangeKisan = (items) => {\n        let surveys = [];\n        let survey = [];\n\n        items.forEach((item) => {\n            // let id = item.id;\n            let data = item.data();\n            surveys.push(data);\n        });\n        setSurveyKisanLength(surveys.length)\n        surveys.map((item, index) => {\n            return survey.push(item);\n        })\n        setSurveyKisan(survey)\n    }\n    const onDataChangeFarmbook = (items) => {\n        let surveys = [];\n        let survey = [];\n\n        items.forEach((item) => {\n            // let id = item.id;\n            let data = item.data();\n            surveys.push(data);\n        });\n        setSurveyFarmbookLength(surveys.length)\n        surveys.map((item, index) => {\n            return survey.push(item);\n        })\n        setSurveyFarmbook(survey)\n    }\n    const onDataChangeRetail = (items) => {\n        let surveys = [];\n        let survey = [];\n\n        items.forEach((item) => {\n            // let id = item.id;\n            let data = item.data();\n            surveys.push(data);\n        });\n        setSurveyRetailLength(surveys.length)\n        surveys.map((item, index) => {\n            return survey.push(item);\n        })\n        setSurveyRetail(survey)\n    }\n\n    const onDataChangeInput = (items) => {\n        let surveys = [];\n        let survey = [];\n\n        items.forEach((item) => {\n            // let id = item.id;\n            let data = item.data();\n            surveys.push(data);\n        });\n        setSurveyInputLength(surveys.length)\n        surveys.map((item, index) => {\n            return survey.push(item);\n        })\n        setSurveyInput(survey)\n    }\n    const onDataChangeAnimal = (items) => {\n        let surveys = [];\n        let survey = [];\n\n        items.forEach((item) => {\n            // let id = item.id;\n            let data = item.data();\n            surveys.push(data);\n        });\n        setSurveyAnimalLength(surveys.length)\n        surveys.map((item, index) => {\n            return survey.push(item);\n        })\n        setSurveyAnimal(survey)\n    }\n    const onDataChangeEquipment = (items) => {\n        let surveys = [];\n        let survey = [];\n\n        items.forEach((item) => {\n            // let id = item.id;\n            let data = item.data();\n            surveys.push(data);\n        });\n        setSurveyEquipmentLength(surveys.length)\n        surveys.map((item, index) => {\n            return survey.push(item);\n        })\n        setSurveyEquipment(survey)\n    }\n\n    const allJsonData = [\n        {\n            id: \"surveyIntern\",\n            data: surveyIntern,\n        },\n        {\n            id: \"surveyFarmbook\",\n            data: surveyFarmbook,\n        },\n        {\n            id: \"surveyKisan\",\n            data: surveyKisan,\n        },\n        {\n            id: \"surveyRetail\",\n            data: surveyRetail,\n        },\n        // surveyInput,\n        // surveyAnimal,\n        // surveyEquipment,\n\n    ]\n    const dataFile = (item) => {\n        return allJsonData.filter((jsonData) => {\n            console.log(jsonData.id)\n            console.log(item.jsonData === jsonData.id && jsonData.data)\n            return item.jsonData === jsonData.id ? jsonData.data : null\n        })\n    }\n\n    const dataCards = [\n        {\n            title: \"Intern\",\n            value: surveyInternLength,\n            color: \"warning\",\n            icon: <Store/>,\n            url: 'internSurvey'\n        },\n        {\n            title: \"Kisan\",\n            value: surveyKisanLength,\n            color: \"success\",\n            icon: <Store/>,\n            url: 'kisanSurvey'\n        },\n        {\n            title: \"Farmbook\",\n            value: surveyFarmbookLength,\n            color: \"danger\",\n            icon: <Store/>,\n            url: 'farmbookSurvey'\n        },\n        {\n            title: \"Retail\",\n            value: surveyRetailLength,\n            color: \"info\",\n            icon: <Store/>,\n            url: 'retailSurvey'\n        },\n\n    ]\n\n    return (\n        <div>\n            <GridContainer>\n                {dataCards.map((item, index) => {\n                    return <GridItem xs={12} sm={6} md={3} key={index} style={{cursor: \"pointer\"}} onClick={(e)=>{\n                        e.preventDefault();\n                        props.history.push(`${item.url}`)\n                    }}>\n                        <Card>\n                            <CardHeader color={item.color} stats icon>\n                                <CardIcon color={item.color}>\n                                    {item.icon}\n                                </CardIcon>\n                                <p></p>\n                                <h6 className={classes.cardTitle}>{item.title}</h6>\n                                <p className={classes.cardCategory}>Total Surveys</p>\n                                <h3 className={classes.cardTitle}>\n                                    {item.value}\n                                </h3>\n                            </CardHeader>\n                            <CardFooter stats>\n                                <div className={classes.stats}>\n                                    <p><b>Till </b></p>\n                                    <p>{\" - \"}</p>\n                                    <p>{moment().format('DD/mm/yyyy')}</p>\n                                </div>\n                            </CardFooter>\n                        </Card>\n                    </GridItem>\n                })}\n            </GridContainer>\n            {/*<GridContainer>*/}\n            {/*  <GridItem xs={12} sm={12} md={4}>*/}\n            {/*    <Card chart>*/}\n            {/*      <CardHeader color=\"success\">*/}\n            {/*        <ChartistGraph*/}\n            {/*          className=\"ct-chart\"*/}\n            {/*          data={dailySalesChart.data}*/}\n            {/*          type=\"Line\"*/}\n            {/*          options={dailySalesChart.options}*/}\n            {/*          listener={dailySalesChart.animation}*/}\n            {/*        />*/}\n            {/*      </CardHeader>*/}\n            {/*      <CardBody>*/}\n            {/*        <h4 className={classes.cardTitle}>Daily Sales</h4>*/}\n            {/*        <p className={classes.cardCategory}>*/}\n            {/*          <span className={classes.successText}>*/}\n            {/*            <ArrowUpward className={classes.upArrowCardCategory} /> 55%*/}\n            {/*          </span>{\" \"}*/}\n            {/*          increase in today sales.*/}\n            {/*        </p>*/}\n            {/*      </CardBody>*/}\n            {/*      <CardFooter chart>*/}\n            {/*        <div className={classes.stats}>*/}\n            {/*          <AccessTime /> updated 4 minutes ago*/}\n            {/*        </div>*/}\n            {/*      </CardFooter>*/}\n            {/*    </Card>*/}\n            {/*  </GridItem>*/}\n            {/*  <GridItem xs={12} sm={12} md={4}>*/}\n            {/*    <Card chart>*/}\n            {/*      <CardHeader color=\"warning\">*/}\n            {/*        <ChartistGraph*/}\n            {/*          className=\"ct-chart\"*/}\n            {/*          data={emailsSubscriptionChart.data}*/}\n            {/*          type=\"Bar\"*/}\n            {/*          options={emailsSubscriptionChart.options}*/}\n            {/*          responsiveOptions={emailsSubscriptionChart.responsiveOptions}*/}\n            {/*          listener={emailsSubscriptionChart.animation}*/}\n            {/*        />*/}\n            {/*      </CardHeader>*/}\n            {/*      <CardBody>*/}\n            {/*        <h4 className={classes.cardTitle}>Email Subscriptions</h4>*/}\n            {/*        <p className={classes.cardCategory}>Last Campaign Performance</p>*/}\n            {/*      </CardBody>*/}\n            {/*      <CardFooter chart>*/}\n            {/*        <div className={classes.stats}>*/}\n            {/*          <AccessTime /> campaign sent 2 days ago*/}\n            {/*        </div>*/}\n            {/*      </CardFooter>*/}\n            {/*    </Card>*/}\n            {/*  </GridItem>*/}\n            {/*  <GridItem xs={12} sm={12} md={4}>*/}\n            {/*    <Card chart>*/}\n            {/*      <CardHeader color=\"danger\">*/}\n            {/*        <ChartistGraph*/}\n            {/*          className=\"ct-chart\"*/}\n            {/*          data={completedTasksChart.data}*/}\n            {/*          type=\"Line\"*/}\n            {/*          options={completedTasksChart.options}*/}\n            {/*          listener={completedTasksChart.animation}*/}\n            {/*        />*/}\n            {/*      </CardHeader>*/}\n            {/*      <CardBody>*/}\n            {/*        <h4 className={classes.cardTitle}>Completed Tasks</h4>*/}\n            {/*        <p className={classes.cardCategory}>Last Campaign Performance</p>*/}\n            {/*      </CardBody>*/}\n            {/*      <CardFooter chart>*/}\n            {/*        <div className={classes.stats}>*/}\n            {/*          <AccessTime /> campaign sent 2 days ago*/}\n            {/*        </div>*/}\n            {/*      </CardFooter>*/}\n            {/*    </Card>*/}\n            {/*  </GridItem>*/}\n            {/*</GridContainer>*/}\n            {/*<GridContainer>*/}\n            {/*  <GridItem xs={12} sm={12} md={6}>*/}\n            {/*    <CustomTabs*/}\n            {/*      title=\"Tasks:\"*/}\n            {/*      headerColor=\"primary\"*/}\n            {/*      tabs={[*/}\n            {/*        {*/}\n            {/*          tabName: \"Bugs\",*/}\n            {/*          tabIcon: BugReport,*/}\n            {/*          tabContent: (*/}\n            {/*            <Tasks*/}\n            {/*              checkedIndexes={[0, 3]}*/}\n            {/*              tasksIndexes={[0, 1, 2, 3]}*/}\n            {/*              tasks={bugs}*/}\n            {/*            />*/}\n            {/*          )*/}\n            {/*        },*/}\n            {/*        {*/}\n            {/*          tabName: \"Website\",*/}\n            {/*          tabIcon: Code,*/}\n            {/*          tabContent: (*/}\n            {/*            <Tasks*/}\n            {/*              checkedIndexes={[0]}*/}\n            {/*              tasksIndexes={[0, 1]}*/}\n            {/*              tasks={website}*/}\n            {/*            />*/}\n            {/*          )*/}\n            {/*        },*/}\n            {/*        {*/}\n            {/*          tabName: \"Server\",*/}\n            {/*          tabIcon: Cloud,*/}\n            {/*          tabContent: (*/}\n            {/*            <Tasks*/}\n            {/*              checkedIndexes={[1]}*/}\n            {/*              tasksIndexes={[0, 1, 2]}*/}\n            {/*              tasks={server}*/}\n            {/*            />*/}\n            {/*          )*/}\n            {/*        }*/}\n            {/*      ]}*/}\n            {/*    />*/}\n            {/*  </GridItem>*/}\n            {/*  <GridItem xs={12} sm={12} md={6}>*/}\n            {/*    <Card>*/}\n            {/*      <CardHeader color=\"warning\">*/}\n            {/*        <h4 className={classes.cardTitleWhite}>Employees Stats</h4>*/}\n            {/*        <p className={classes.cardCategoryWhite}>*/}\n            {/*          New employees on 15th September, 2016*/}\n            {/*        </p>*/}\n            {/*      </CardHeader>*/}\n            {/*      <CardBody>*/}\n            {/*        <Table*/}\n            {/*          tableHeaderColor=\"warning\"*/}\n            {/*          tableHead={[\"ID\", \"Name\", \"Salary\", \"Country\"]}*/}\n            {/*          tableData={[*/}\n            {/*            [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\"],*/}\n            {/*            [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\"],*/}\n            {/*            [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\"],*/}\n            {/*            [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\"]*/}\n            {/*          ]}*/}\n            {/*        />*/}\n            {/*      </CardBody>*/}\n            {/*    </Card>*/}\n            {/*  </GridItem>*/}\n            {/*</GridContainer>*/}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}